{"version":3,"file":"assets/js/naf-imports.237e5d4185746e09cd30.js","mappings":"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","sources":["webpack://supermrcado-webpack/./node_modules/buffered-interpolation/dist/buffered-interpolation.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/ChildEntityCache.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/DeepEquals.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/NafIndex.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/NafInterface.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/NafLogger.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/NetworkConnection.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/NetworkEntities.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/Schemas.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/adapters/AdapterFactory.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/adapters/EasyRtcAdapter.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/adapters/NoOpAdapter.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/adapters/WsEasyRtcAdapter.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/adapters/naf-socketio-adapter.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/adapters/naf-webrtc-adapter.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/components/networked-audio-source.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/components/networked-scene.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/components/networked-video-source.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/components/networked.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/index.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/options.js","webpack://supermrcado-webpack/./node_modules/networked-aframe/src/utils.js","webpack://supermrcado-webpack/webpack/bootstrap","webpack://supermrcado-webpack/webpack/runtime/compat get default export","webpack://supermrcado-webpack/webpack/runtime/define property getters","webpack://supermrcado-webpack/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* global THREE */\n\nvar INITIALIZING = 0;\nvar BUFFERING = 1;\nvar PLAYING = 2;\n\nvar MODE_LERP = 0;\nvar MODE_HERMITE = 1;\n\nvar vectorPool = [];\nvar quatPool = [];\nvar framePool = [];\n\nvar getPooledVector = function getPooledVector() {\n  return vectorPool.shift() || new THREE.Vector3();\n};\nvar getPooledQuaternion = function getPooledQuaternion() {\n  return quatPool.shift() || new THREE.Quaternion();\n};\n\nvar getPooledFrame = function getPooledFrame() {\n  var frame = framePool.pop();\n\n  if (!frame) {\n    frame = { position: new THREE.Vector3(), velocity: new THREE.Vector3(), scale: new THREE.Vector3(), quaternion: new THREE.Quaternion(), time: 0 };\n  }\n\n  return frame;\n};\n\nvar freeFrame = function freeFrame(f) {\n  return framePool.push(f);\n};\n\nvar InterpolationBuffer = function () {\n  function InterpolationBuffer() {\n    var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MODE_LERP;\n    var bufferTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;\n\n    _classCallCheck(this, InterpolationBuffer);\n\n    this.state = INITIALIZING;\n    this.buffer = [];\n    this.bufferTime = bufferTime * 1000;\n    this.time = 0;\n    this.mode = mode;\n\n    this.originFrame = getPooledFrame();\n    this.position = new THREE.Vector3();\n    this.quaternion = new THREE.Quaternion();\n    this.scale = new THREE.Vector3(1, 1, 1);\n  }\n\n  _createClass(InterpolationBuffer, [{\n    key: \"hermite\",\n    value: function hermite(target, t, p1, p2, v1, v2) {\n      var t2 = t * t;\n      var t3 = t * t * t;\n      var a = 2 * t3 - 3 * t2 + 1;\n      var b = -2 * t3 + 3 * t2;\n      var c = t3 - 2 * t2 + t;\n      var d = t3 - t2;\n\n      target.copy(p1.multiplyScalar(a));\n      target.add(p2.multiplyScalar(b));\n      target.add(v1.multiplyScalar(c));\n      target.add(v2.multiplyScalar(d));\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(target, v1, v2, alpha) {\n      target.lerpVectors(v1, v2, alpha);\n    }\n  }, {\n    key: \"slerp\",\n    value: function slerp(target, r1, r2, alpha) {\n      target.slerpQuaternions(r1, r2, alpha);\n    }\n  }, {\n    key: \"updateOriginFrameToBufferTail\",\n    value: function updateOriginFrameToBufferTail() {\n      freeFrame(this.originFrame);\n      this.originFrame = this.buffer.shift();\n    }\n  }, {\n    key: \"appendBuffer\",\n    value: function appendBuffer(position, velocity, quaternion, scale) {\n      var tail = this.buffer.length > 0 ? this.buffer[this.buffer.length - 1] : null;\n      // update the last entry in the buffer if this is the same frame\n      if (tail && tail.time === this.time) {\n        if (position) {\n          tail.position.copy(position);\n        }\n\n        if (velocity) {\n          tail.velocity.copy(velocity);\n        }\n\n        if (quaternion) {\n          tail.quaternion.copy(quaternion);\n        }\n\n        if (scale) {\n          tail.scale.copy(scale);\n        }\n      } else {\n        var priorFrame = tail || this.originFrame;\n        var newFrame = getPooledFrame();\n        newFrame.position.copy(position || priorFrame.position);\n        newFrame.velocity.copy(velocity || priorFrame.velocity);\n        newFrame.quaternion.copy(quaternion || priorFrame.quaternion);\n        newFrame.scale.copy(scale || priorFrame.scale);\n        newFrame.time = this.time;\n\n        this.buffer.push(newFrame);\n      }\n    }\n  }, {\n    key: \"setTarget\",\n    value: function setTarget(position, velocity, quaternion, scale) {\n      this.appendBuffer(position, velocity, quaternion, scale);\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(position, velocity) {\n      this.appendBuffer(position, velocity, null, null);\n    }\n  }, {\n    key: \"setQuaternion\",\n    value: function setQuaternion(quaternion) {\n      this.appendBuffer(null, null, quaternion, null);\n    }\n  }, {\n    key: \"setScale\",\n    value: function setScale(scale) {\n      this.appendBuffer(null, null, null, scale);\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      if (this.state === INITIALIZING) {\n        if (this.buffer.length > 0) {\n          this.updateOriginFrameToBufferTail();\n          this.position.copy(this.originFrame.position);\n          this.quaternion.copy(this.originFrame.quaternion);\n          this.scale.copy(this.originFrame.scale);\n          this.state = BUFFERING;\n        }\n      }\n\n      if (this.state === BUFFERING) {\n        if (this.buffer.length > 0 && this.time > this.bufferTime) {\n          this.state = PLAYING;\n        }\n      }\n\n      if (this.state === PLAYING) {\n        var mark = this.time - this.bufferTime;\n        //Purge this.buffer of expired frames\n        while (this.buffer.length > 0 && mark > this.buffer[0].time) {\n          //if this is the last frame in the buffer, just update the time and reuse it\n          if (this.buffer.length > 1) {\n            this.updateOriginFrameToBufferTail();\n          } else {\n            this.originFrame.position.copy(this.buffer[0].position);\n            this.originFrame.velocity.copy(this.buffer[0].velocity);\n            this.originFrame.quaternion.copy(this.buffer[0].quaternion);\n            this.originFrame.scale.copy(this.buffer[0].scale);\n            this.originFrame.time = this.buffer[0].time;\n            this.buffer[0].time = this.time + delta;\n          }\n        }\n        if (this.buffer.length > 0 && this.buffer[0].time > 0) {\n          var targetFrame = this.buffer[0];\n          var delta_time = targetFrame.time - this.originFrame.time;\n          var alpha = (mark - this.originFrame.time) / delta_time;\n\n          if (this.mode === MODE_LERP) {\n            this.lerp(this.position, this.originFrame.position, targetFrame.position, alpha);\n          } else if (this.mode === MODE_HERMITE) {\n            this.hermite(this.position, alpha, this.originFrame.position, targetFrame.position, this.originFrame.velocity.multiplyScalar(delta_time), targetFrame.velocity.multiplyScalar(delta_time));\n          }\n\n          this.slerp(this.quaternion, this.originFrame.quaternion, targetFrame.quaternion, alpha);\n\n          this.lerp(this.scale, this.originFrame.scale, targetFrame.scale, alpha);\n        }\n      }\n\n      if (this.state !== INITIALIZING) {\n        this.time += delta;\n      }\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return this.position;\n    }\n  }, {\n    key: \"getQuaternion\",\n    value: function getQuaternion() {\n      return this.quaternion;\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale() {\n      return this.scale;\n    }\n  }]);\n\n  return InterpolationBuffer;\n}();\n\nmodule.exports = InterpolationBuffer;\n","class ChildEntityCache {\n\n  constructor() {\n    this.dict = {};\n  }\n\n  addChild(parentNetworkId, childData) {\n    if (!this.hasParent(parentNetworkId)) {\n      this.dict[parentNetworkId] = [];\n    }\n    this.dict[parentNetworkId].push(childData);\n  }\n\n  getChildren(parentNetworkId) {\n    if (!this.hasParent(parentNetworkId)) {\n      return [];\n    }\n    var children = this.dict[parentNetworkId];\n    delete this.dict[parentNetworkId];\n    return children;\n  }\n\n  /* Private */\n  hasParent(parentId) {\n    return !!this.dict[parentId];\n  }\n}\nmodule.exports = ChildEntityCache;","// Patched version of fast-deep-equal which does not\n// allocate memory via calling Object.keys\n//\n// https://github.com/epoberezkin/fast-deep-equal/blob/master/index.js\n'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","var options = require('./options');\nvar utils = require('./utils');\nvar NafLogger = require('./NafLogger');\nvar Schemas = require('./Schemas');\nvar NetworkEntities = require('./NetworkEntities');\nvar NetworkConnection = require('./NetworkConnection');\nvar AdapterFactory = require('./adapters/AdapterFactory');\n\nvar naf = {};\nnaf.app = '';\nnaf.room = '';\nnaf.clientId = '';\nnaf.options = options;\nnaf.utils = utils;\nnaf.log = new NafLogger();\nnaf.schemas = new Schemas();\nnaf.version = \"0.9.1\";\n\nnaf.adapters = new AdapterFactory();\nvar entities = new NetworkEntities();\nvar connection = new NetworkConnection(entities);\nnaf.connection = connection;\nnaf.entities = entities;\n\nmodule.exports = window.NAF = naf;\n","/* global NAF */\n\nclass NafInterface {\n  notImplemented(name) {\n    NAF.log.error('Interface method not implemented:', name);\n  }\n}\nmodule.exports = NafInterface;","/*eslint no-console: \"off\" */\n\nclass NafLogger {\n\n  constructor() {\n    this.debug = false;\n  }\n\n  setDebug(debug) {\n    this.debug = debug;\n  }\n\n  write() {\n    if (this.debug) {\n      console.log.apply(this, arguments);\n    }\n  }\n\n  warn() {\n    console.warn.apply(this, arguments);\n  }\n\n  error() {\n    console.error.apply(this, arguments);\n  }\n}\n\nmodule.exports = NafLogger;","/* global NAF */\nvar ReservedDataType = { Update: 'u', UpdateMulti: 'um', Remove: 'r' };\n\nclass NetworkConnection {\n\n  constructor(networkEntities) {\n    this.entities = networkEntities;\n    this.setupDefaultDataSubscriptions();\n\n    this.connectedClients = {};\n    this.activeDataChannels = {};\n  }\n\n  setNetworkAdapter(adapter) {\n    this.adapter = adapter;\n  }\n\n  setupDefaultDataSubscriptions() {\n    this.dataChannelSubs = {};\n\n    this.dataChannelSubs[ReservedDataType.Update]\n        = this.entities.updateEntity.bind(this.entities);\n\n    this.dataChannelSubs[ReservedDataType.UpdateMulti]\n        = this.entities.updateEntityMulti.bind(this.entities);\n\n    this.dataChannelSubs[ReservedDataType.Remove]\n        = this.entities.removeRemoteEntity.bind(this.entities);\n  }\n\n  connect(serverUrl, appName, roomName, enableAudio = false, enableVideo = false) {\n    NAF.app = appName;\n    NAF.room = roomName;\n\n    this.adapter.setServerUrl(serverUrl);\n    this.adapter.setApp(appName);\n    this.adapter.setRoom(roomName);\n\n    var webrtcOptions = {\n      audio: enableAudio,\n      video: enableVideo,\n      datachannel: true\n    };\n    this.adapter.setWebRtcOptions(webrtcOptions);\n\n    this.adapter.setServerConnectListeners(\n      this.connectSuccess.bind(this),\n      this.connectFailure.bind(this)\n    );\n    this.adapter.setDataChannelListeners(\n      this.dataChannelOpen.bind(this),\n      this.dataChannelClosed.bind(this),\n      this.receivedData.bind(this)\n    );\n    this.adapter.setRoomOccupantListener(this.occupantsReceived.bind(this));\n\n    return this.adapter.connect();\n  }\n\n  onConnect(callback) {\n    this.onConnectCallback = callback;\n\n    if (this.isConnected()) {\n      callback();\n    } else {\n      document.body.addEventListener('connected', callback, false);\n    }\n  }\n\n  connectSuccess(clientId) {\n    NAF.log.write('Networked-Aframe Client ID:', clientId);\n    NAF.clientId = clientId;\n\n    var evt = new CustomEvent('connected', {'detail': { clientId: clientId }});\n    document.body.dispatchEvent(evt);\n  }\n\n  connectFailure(errorCode, message) {\n    NAF.log.error(errorCode, \"failure to connect\");\n  }\n\n  occupantsReceived(occupantList) {\n    var prevConnectedClients = Object.assign({}, this.connectedClients);\n    this.connectedClients = occupantList;\n    this.checkForDisconnectingClients(prevConnectedClients, occupantList);\n    this.checkForConnectingClients(occupantList);\n  }\n\n  checkForDisconnectingClients(oldOccupantList, newOccupantList) {\n    for (var id in oldOccupantList) {\n      var clientFound = newOccupantList[id];\n      if (!clientFound) {\n        NAF.log.write('Closing stream to', id);\n        this.adapter.closeStreamConnection(id);\n      }\n    }\n  }\n\n  // Some adapters will handle this internally\n  checkForConnectingClients(occupantList) {\n    for (var id in occupantList) {\n      var startConnection = this.isNewClient(id) && this.adapter.shouldStartConnectionTo(occupantList[id]);\n      if (startConnection) {\n        NAF.log.write('Opening datachannel to', id);\n        this.adapter.startStreamConnection(id);\n      }\n    }\n  }\n\n  getConnectedClients() {\n    return this.connectedClients;\n  }\n\n  isConnected() {\n    return !!NAF.clientId;\n  }\n\n  isMineAndConnected(clientId) {\n    return this.isConnected() && NAF.clientId === clientId;\n  }\n\n  isNewClient(clientId) {\n    return !this.isConnectedTo(clientId);\n  }\n\n  isConnectedTo(clientId) {\n    return this.adapter.getConnectStatus(clientId) === NAF.adapters.IS_CONNECTED;\n  }\n\n  dataChannelOpen(clientId) {\n    NAF.log.write('Opened data channel from ' + clientId);\n    this.activeDataChannels[clientId] = true;\n    this.entities.completeSync(clientId, true);\n\n    var evt = new CustomEvent('clientConnected', {detail: {clientId: clientId}});\n    document.body.dispatchEvent(evt);\n  }\n\n  dataChannelClosed(clientId) {\n    NAF.log.write('Closed data channel from ' + clientId);\n    this.activeDataChannels[clientId] = false;\n    this.entities.removeEntitiesOfClient(clientId);\n\n    var evt = new CustomEvent('clientDisconnected', {detail: {clientId: clientId}});\n    document.body.dispatchEvent(evt);\n  }\n\n  hasActiveDataChannel(clientId) {\n    return !!this.activeDataChannels[clientId];\n  }\n\n  broadcastData(dataType, data) {\n    this.adapter.broadcastData(dataType, data);\n  }\n\n  broadcastDataGuaranteed(dataType, data) {\n    this.adapter.broadcastDataGuaranteed(dataType, data);\n  }\n\n  sendData(toClientId, dataType, data, guaranteed) {\n    if (this.hasActiveDataChannel(toClientId)) {\n      if (guaranteed) {\n        this.adapter.sendDataGuaranteed(toClientId, dataType, data);\n      } else {\n        this.adapter.sendData(toClientId, dataType, data);\n      }\n    } else {\n      // console.error(\"NOT-CONNECTED\", \"not connected to \" + toClient);\n    }\n  }\n\n  sendDataGuaranteed(toClientId, dataType, data) {\n    this.sendData(toClientId, dataType, data, true);\n  }\n\n  subscribeToDataChannel(dataType, callback) {\n    if (this.isReservedDataType(dataType)) {\n      NAF.log.error('NetworkConnection@subscribeToDataChannel: ' + dataType + ' is a reserved dataType. Choose another');\n      return;\n    }\n    this.dataChannelSubs[dataType] = callback;\n  }\n\n  unsubscribeToDataChannel(dataType) {\n    if (this.isReservedDataType(dataType)) {\n      NAF.log.error('NetworkConnection@unsubscribeToDataChannel: ' + dataType + ' is a reserved dataType. Choose another');\n      return;\n    }\n    delete this.dataChannelSubs[dataType];\n  }\n\n  isReservedDataType(dataType) {\n    return dataType == ReservedDataType.Update\n        || dataType == ReservedDataType.Remove;\n  }\n\n  receivedData(fromClientId, dataType, data, source) {\n    if (this.dataChannelSubs[dataType]) {\n      this.dataChannelSubs[dataType](fromClientId, dataType, data, source);\n    } else {\n      NAF.log.write('NetworkConnection@receivedData: ' + dataType + ' has not been subscribed to yet. Call subscribeToDataChannel()');\n    }\n  }\n\n  getServerTime() {\n    return this.adapter.getServerTime();\n  }\n\n  disconnect() {\n    this.entities.removeRemoteEntities();\n\n    if (this.adapter) {\n      this.adapter.disconnect();\n    }\n\n    NAF.app = '';\n    NAF.room = '';\n    NAF.clientId = '';\n    this.connectedClients = {};\n    this.activeDataChannels = {};\n    this.adapter = null;\n\n    this.setupDefaultDataSubscriptions();\n\n    document.body.removeEventListener('connected', this.onConnectCallback);\n  }\n}\n\nmodule.exports = NetworkConnection;\n","/* global NAF */\nvar ChildEntityCache = require('./ChildEntityCache');\n\nclass NetworkEntities {\n\n  constructor() {\n    this.entities = {};\n    this.childCache = new ChildEntityCache();\n    this.onRemoteEntityCreatedEvent = new Event('remoteEntityCreated');\n    this._persistentFirstSyncs = {};\n  }\n\n  registerEntity(networkId, entity) {\n    this.entities[networkId] = entity;\n  }\n\n  createRemoteEntity(entityData) {\n    NAF.log.write('Creating remote entity', entityData);\n\n    var networkId = entityData.networkId;\n    var el = NAF.schemas.getCachedTemplate(entityData.template);\n\n    this.initPosition(el, entityData.components);\n    this.initRotation(el, entityData.components);\n    this.addNetworkComponent(el, entityData);\n\n    this.registerEntity(networkId, el);\n\n    return el;\n  }\n\n  initPosition(entity, componentData) {\n    var hasPosition = componentData['position'];\n    if (hasPosition) {\n      var position = componentData.position;\n      entity.setAttribute('position', position);\n    }\n  }\n\n  initRotation(entity, componentData) {\n    var hasRotation = componentData['rotation'];\n    if (hasRotation) {\n      var rotation = componentData.rotation;\n      entity.setAttribute('rotation', rotation);\n    }\n  }\n\n  addNetworkComponent(entity, entityData) {\n    var networkData = {\n      template: entityData.template,\n      creator: entityData.creator,\n      owner: entityData.owner,\n      networkId: entityData.networkId,\n      persistent: entityData.persistent\n    };\n\n    entity.setAttribute('networked', networkData);\n    entity.firstUpdateData = entityData;\n  }\n\n  updateEntityMulti(client, dataType, entityDatas, source) {\n    if (NAF.options.syncSource && source !== NAF.options.syncSource) return;\n    for (let i = 0, l = entityDatas.d.length; i < l; i++) {\n      this.updateEntity(client, 'u', entityDatas.d[i], source);\n    }\n  }\n\n  updateEntity(client, dataType, entityData, source) {\n    if (NAF.options.syncSource && source !== NAF.options.syncSource) return;\n    var networkId = entityData.networkId;\n\n    if (this.hasEntity(networkId)) {\n      this.entities[networkId].components.networked.networkUpdate(entityData);\n    } else if (entityData.isFirstSync && NAF.connection.activeDataChannels[entityData.owner] !== false) {\n      if (NAF.options.firstSyncSource && source !== NAF.options.firstSyncSource) {\n        NAF.log.write('Ignoring first sync from disallowed source', source);\n      } else {\n        if (entityData.persistent) {\n          // If we receive a firstSync for a persistent entity that we don't have yet,\n          // we assume the scene will create it at some point, so stash the update for later use.\n          this._persistentFirstSyncs[networkId] = entityData;\n        } else {\n          this.receiveFirstUpdateFromEntity(entityData);\n        }\n      }\n    }\n  }\n\n  receiveFirstUpdateFromEntity(entityData) {\n    var parent = entityData.parent;\n    var networkId = entityData.networkId;\n\n    var parentNotCreatedYet = parent && !this.hasEntity(parent);\n    if (parentNotCreatedYet) {\n      this.childCache.addChild(parent, entityData);\n    } else {\n      var remoteEntity = this.createRemoteEntity(entityData);\n      this.createAndAppendChildren(networkId, remoteEntity);\n      this.addEntityToPage(remoteEntity, parent);\n    }\n  }\n\n  createAndAppendChildren(parentId, parentEntity) {\n    var children = this.childCache.getChildren(parentId);\n    for (var i = 0; i < children.length; i++) {\n      var childEntityData = children[i];\n      var childId = childEntityData.networkId;\n      if (this.hasEntity(childId)) {\n        NAF.log.warn(\n          'Tried to instantiate entity multiple times',\n          childId,\n          childEntityData,\n          'Existing entity:',\n          this.getEntity(childId)\n        );\n        continue;\n      }\n      var childEntity = this.createRemoteEntity(childEntityData);\n      this.createAndAppendChildren(childId, childEntity);\n      parentEntity.appendChild(childEntity);\n    }\n  }\n\n  addEntityToPage(entity, parentId) {\n    if (this.hasEntity(parentId)) {\n      this.addEntityToParent(entity, parentId);\n    } else {\n      this.addEntityToSceneRoot(entity);\n    }\n  }\n\n  addEntityToParent(entity, parentId) {\n    this.entities[parentId].appendChild(entity);\n  }\n\n  addEntityToSceneRoot(el) {\n    var scene = document.querySelector('a-scene');\n    scene.appendChild(el);\n  }\n\n  completeSync(targetClientId, isFirstSync) {\n    for (var id in this.entities) {\n      if (this.entities[id]) {\n        this.entities[id].components.networked.syncAll(targetClientId, isFirstSync);\n      }\n    }\n  }\n\n  removeRemoteEntity(toClient, dataType, data, source) {\n    if (NAF.options.syncSource && source !== NAF.options.syncSource) return;\n    var id = data.networkId;\n    return this.removeEntity(id);\n  }\n\n  removeEntitiesOfClient(clientId) {\n    const removedEntities = [];\n    for (var id in this.entities) {\n      const entity = this.entities[id]\n      const creator = NAF.utils.getCreator(entity);\n      const owner = NAF.utils.getNetworkOwner(entity);\n      if (creator === clientId || (!creator && owner === clientId)) {\n        const component = this.entities[id].getAttribute(\"networked\")\n        if (component && component.persistent) {\n          // everyone will attempt to take ownership, someone will win, it does not particularly matter who\n          NAF.utils.takeOwnership(entity);\n        } else {\n          removedEntities.push(this.removeEntity(id));\n        }\n      }\n    }\n    return removedEntities;\n  }\n\n  removeEntity(id) {\n    this.forgetPersistentFirstSync(id);\n\n    if (this.hasEntity(id)) {\n      var entity = this.entities[id];\n      this.forgetEntity(id);\n      entity.parentNode.removeChild(entity);\n      return entity;\n    } else {\n      NAF.log.error(\"Tried to remove entity I don't have.\");\n      return null;\n    }\n  }\n\n  forgetEntity(id){\n    delete this.entities[id];\n    this.forgetPersistentFirstSync(id);\n  }\n\n  getPersistentFirstSync(id){\n    return this._persistentFirstSyncs[id];\n  }\n\n  forgetPersistentFirstSync(id){\n    delete this._persistentFirstSyncs[id];\n  }\n\n  getEntity(id) {\n    if (this.entities[id]) {\n      return this.entities[id];\n    }\n    return null;\n  }\n\n  hasEntity(id) {\n    return !!this.entities[id];\n  }\n\n  removeRemoteEntities() {\n    this.childCache = new ChildEntityCache();\n\n    for (var id in this.entities) {\n      var owner = this.entities[id].getAttribute('networked').owner;\n      if (owner != NAF.clientId) {\n        this.removeEntity(id);\n      }\n    }\n  }\n}\n\nmodule.exports = NetworkEntities;\n","/* global NAF */\n\nclass Schemas {\n\n  constructor() {\n    this.schemaDict = {};\n    this.templateCache = {};\n  }\n\n  createDefaultSchema(name) {\n    return {\n      template: name,\n      components: [\n        'position',\n        'rotation',\n      ]\n    }\n  }\n\n  add(schema) {\n    if (this.validateSchema(schema)) {\n      this.schemaDict[schema.template] = schema;\n      var templateEl = document.querySelector(schema.template);\n      if (!templateEl) {\n        NAF.log.error(`Template el not found for ${schema.template}, make sure NAF.schemas.add is called after <a-scene> is defined.`);\n        return;\n      }\n      if (!this.validateTemplate(schema, templateEl)) {\n        return;\n      }\n      this.templateCache[schema.template] = document.importNode(templateEl.content, true);\n    } else {\n      NAF.log.error('Schema not valid: ', schema);\n      NAF.log.error('See https://github.com/networked-aframe/networked-aframe#syncing-custom-components');\n    }\n  }\n\n  getCachedTemplate(template) {\n    if (!this.templateIsCached(template)) {\n      if (this.templateExistsInScene(template)) {\n        this.add(this.createDefaultSchema(template));\n      } else {\n        NAF.log.error(`Template el for ${template} is not in the scene, add the template to <a-assets> and register with NAF.schemas.add.`);\n      }\n    }\n    return this.templateCache[template].firstElementChild.cloneNode(true);\n  }\n\n  templateIsCached(template) {\n    return !!this.templateCache[template];\n  }\n\n  getComponents(template) {\n    var components = ['position', 'rotation'];\n    if (this.hasTemplate(template)) {\n      components = this.schemaDict[template].components;\n    }\n    return components;\n  }\n\n  hasTemplate(template) {\n    return !!this.schemaDict[template];\n  }\n\n  templateExistsInScene(templateSelector) {\n    var el = document.querySelector(templateSelector);\n    return el && this.isTemplateTag(el);\n  }\n\n  validateSchema(schema) {\n    return !!(schema['template'] && schema['components']);\n  }\n\n  validateTemplate(schema, el) {\n    if (!this.isTemplateTag(el)) {\n      NAF.log.error(`Template for ${schema.template} is not a <template> tag. Instead found: ${el.tagName}`);\n      return false;\n    } else if (!this.templateHasOneOrZeroChildren(el)) {\n      NAF.log.error(`Template for ${schema.template} has more than one child. Templates must have one direct child element, no more. Template found:`, el);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isTemplateTag(el) {\n    return el.tagName.toLowerCase() === 'template';\n  }\n\n  templateHasOneOrZeroChildren(el) {\n    return el.content.childElementCount < 2;\n  }\n\n  remove(template) {\n    delete this.schemaDict[template];\n  }\n\n  clear() {\n    this.schemaDict = {};\n  }\n}\n\nmodule.exports = Schemas;\n","const WsEasyRtcAdapter = require(\"./WsEasyRtcAdapter\");\nconst EasyRtcAdapter = require(\"./EasyRtcAdapter\");\nconst WebrtcAdapter = require(\"./naf-webrtc-adapter\");\nconst SocketioAdapter = require('./naf-socketio-adapter');\n\nclass AdapterFactory {\n  constructor() {\n    this.adapters = {\n      \"wseasyrtc\": WsEasyRtcAdapter,\n      \"easyrtc\": EasyRtcAdapter,\n      \"socketio\": SocketioAdapter,\n      \"webrtc\": WebrtcAdapter,\n    };\n\n    this.IS_CONNECTED = AdapterFactory.IS_CONNECTED;\n    this.CONNECTING = AdapterFactory.CONNECTING;\n    this.NOT_CONNECTED = AdapterFactory.NOT_CONNECTED;\n  }\n\n  register(adapterName, AdapterClass) {\n    this.adapters[adapterName] = AdapterClass;\n  }\n\n  make(adapterName) {\n    var name = adapterName.toLowerCase();\n    if (this.adapters[name]) {\n      var AdapterClass = this.adapters[name];\n      return new AdapterClass();\n    } else {\n      throw new Error(\n        \"Adapter: \" +\n          adapterName +\n          \" not registered. Please use NAF.adapters.register() to register this adapter.\"\n      );\n    }\n  }\n}\n\nAdapterFactory.IS_CONNECTED = \"IS_CONNECTED\";\nAdapterFactory.CONNECTING = \"CONNECTING\";\nAdapterFactory.NOT_CONNECTED = \"NOT_CONNECTED\";\n\nmodule.exports = AdapterFactory;\n","/* global NAF */\nconst NoOpAdapter = require('./NoOpAdapter');\n\nclass EasyRtcAdapter extends NoOpAdapter {\n\n  constructor(easyrtc) {\n    super();\n\n    this.easyrtc = easyrtc || window.easyrtc;\n    this.app = \"default\";\n    this.room = \"default\";\n\n    this.mediaStreams = {};\n    this.remoteClients = {};\n    this.pendingMediaRequests = new Map();\n\n    this.serverTimeRequests = 0;\n    this.timeOffsets = [];\n    this.avgTimeOffset = 0;\n\n    this.easyrtc.setPeerOpenListener((clientId) => {\n      const clientConnection = this.easyrtc.getPeerConnectionByUserId(clientId);\n      this.remoteClients[clientId] = clientConnection;\n    });\n\n    this.easyrtc.setPeerClosedListener((clientId) => {\n      delete this.remoteClients[clientId];\n      const pendingMediaRequests = this.pendingMediaRequests.get(clientId);\n      if (pendingMediaRequests) {\n        const msg = \"The user disconnected before the media stream was resolved.\";\n        Object.keys(pendingMediaRequests).forEach((streamName) => {\n         pendingMediaRequests[streamName].reject(msg);\n        });\n        this.pendingMediaRequests.delete(clientId);\n      }\n    });\n  }\n\n  setServerUrl(url) {\n    this.easyrtc.setSocketUrl(url);\n  }\n\n  setApp(appName) {\n    this.app = appName;\n  }\n\n  setRoom(roomName) {\n    this.room = roomName;\n    this.easyrtc.joinRoom(roomName, null);\n  }\n\n  // options: { datachannel: bool, audio: bool, video: bool }\n  setWebRtcOptions(options) {\n    // this.easyrtc.enableDebug(true);\n    this.easyrtc.enableDataChannels(options.datachannel);\n\n    this.easyrtc.enableVideo(options.video);\n    this.easyrtc.enableAudio(options.audio);\n\n    // TODO receive(audio|video) options ?\n    this.easyrtc.enableVideoReceive(true);\n    this.easyrtc.enableAudioReceive(true);\n  }\n\n  setServerConnectListeners(successListener, failureListener) {\n    this.connectSuccess = successListener;\n    this.connectFailure = failureListener;\n  }\n\n  setRoomOccupantListener(occupantListener) {\n    this.easyrtc.setRoomOccupantListener(function(\n      roomName,\n      occupants,\n      primary\n    ) {\n      occupantListener(occupants);\n    });\n  }\n\n  setDataChannelListeners(openListener, closedListener, messageListener) {\n    this.easyrtc.setDataChannelOpenListener(openListener);\n    this.easyrtc.setDataChannelCloseListener(closedListener);\n    this.easyrtc.setPeerListener(messageListener);\n  }\n\n  updateTimeOffset() {\n    const clientSentTime = Date.now() + this.avgTimeOffset;\n\n    return fetch(document.location.href, { method: \"HEAD\", cache: \"no-cache\" })\n      .then(res => {\n        var precision = 1000;\n        var serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + (precision / 2);\n        var clientReceivedTime = Date.now();\n        var serverTime = serverReceivedTime + ((clientReceivedTime - clientSentTime) / 2);\n        var timeOffset = serverTime - clientReceivedTime;\n\n        this.serverTimeRequests++;\n\n        if (this.serverTimeRequests <= 10) {\n          this.timeOffsets.push(timeOffset);\n        } else {\n          this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\n        }\n\n        this.avgTimeOffset = this.timeOffsets.reduce((acc, offset) => acc += offset, 0) / this.timeOffsets.length;\n\n        if (this.serverTimeRequests > 10) {\n          setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\n        } else {\n          this.updateTimeOffset();\n        }\n      });\n  }\n\n  connect() {\n    Promise.all([\n      this.updateTimeOffset(),\n      new Promise((resolve, reject) => {\n        this._connect(resolve, reject);\n      })\n    ]).then(([_, clientId]) => {\n      this._myRoomJoinTime = this._getRoomJoinTime(clientId);\n      this.connectSuccess(clientId);\n    }).catch(this.connectFailure);\n  }\n\n  shouldStartConnectionTo(client) {\n    return this._myRoomJoinTime <= client.roomJoinTime;\n  }\n\n  startStreamConnection(clientId) {\n    this.easyrtc.call(\n      clientId,\n      function(caller, media) {\n        if (media === \"datachannel\") {\n          NAF.log.write(\"Successfully started datachannel to \", caller);\n        }\n      },\n      function(errorCode, errorText) {\n        NAF.log.error(errorCode, errorText);\n      },\n      function(wasAccepted) {\n        // console.log(\"was accepted=\" + wasAccepted);\n      }\n    );\n  }\n\n  closeStreamConnection(clientId) {\n    this.easyrtc.hangup(clientId);\n  }\n\n  sendData(clientId, dataType, data) {\n    // send via webrtc otherwise fallback to websockets\n    this.easyrtc.sendData(clientId, dataType, data);\n  }\n\n  sendDataGuaranteed(clientId, dataType, data) {\n    this.easyrtc.sendDataWS(clientId, dataType, data);\n  }\n\n  broadcastData(dataType, data) {\n    var roomOccupants = this.easyrtc.getRoomOccupantsAsMap(this.room);\n\n    // Iterate over the keys of the easyrtc room occupants map.\n    // getRoomOccupantsAsArray uses Object.keys which allocates memory.\n    for (var roomOccupant in roomOccupants) {\n      if (\n        roomOccupants[roomOccupant] &&\n        roomOccupant !== this.easyrtc.myEasyrtcid\n      ) {\n        // send via webrtc otherwise fallback to websockets\n        this.easyrtc.sendData(roomOccupant, dataType, data);\n      }\n    }\n  }\n\n  broadcastDataGuaranteed(dataType, data) {\n    var destination = { targetRoom: this.room };\n    this.easyrtc.sendDataWS(destination, dataType, data);\n  }\n\n  getConnectStatus(clientId) {\n    var status = this.easyrtc.getConnectStatus(clientId);\n\n    if (status == this.easyrtc.IS_CONNECTED) {\n      return NAF.adapters.IS_CONNECTED;\n    } else if (status == this.easyrtc.NOT_CONNECTED) {\n      return NAF.adapters.NOT_CONNECTED;\n    } else {\n      return NAF.adapters.CONNECTING;\n    }\n  }\n\n  getMediaStream(clientId, streamName = \"audio\") {\n    if (this.mediaStreams[clientId] && this.mediaStreams[clientId][streamName]) {\n      NAF.log.write(`Already had ${streamName} for ${clientId}`);\n      return Promise.resolve(this.mediaStreams[clientId][streamName]);\n    } else {\n      NAF.log.write(`Waiting on ${streamName} for ${clientId}`);\n\n      // Create initial pendingMediaRequests with audio|video alias\n      if (!this.pendingMediaRequests.has(clientId)) {\n        const pendingMediaRequests = {};\n\n        const audioPromise = new Promise((resolve, reject) => {\n          pendingMediaRequests.audio = { resolve, reject };\n        }).catch(e => NAF.log.warn(`${clientId} getMediaStream Audio Error`, e));\n        pendingMediaRequests.audio.promise = audioPromise;\n\n        const videoPromise = new Promise((resolve, reject) => {\n          pendingMediaRequests.video = { resolve, reject };\n        }).catch(e => NAF.log.warn(`${clientId} getMediaStream Video Error`, e));\n        pendingMediaRequests.video.promise = videoPromise;\n\n        this.pendingMediaRequests.set(clientId, pendingMediaRequests);\n      }\n\n      const pendingMediaRequests = this.pendingMediaRequests.get(clientId);\n\n      // Create initial pendingMediaRequests with streamName\n      if (!pendingMediaRequests[streamName]) {\n        const streamPromise = new Promise((resolve, reject) => {\n          pendingMediaRequests[streamName] = { resolve, reject };\n        }).catch(e => NAF.log.warn(`${clientId} getMediaStream \"${streamName}\" Error`, e))\n        pendingMediaRequests[streamName].promise = streamPromise;\n      }\n\n      return this.pendingMediaRequests.get(clientId)[streamName].promise;\n    }\n  }\n\n  setMediaStream(clientId, stream, streamName) {\n    const pendingMediaRequests = this.pendingMediaRequests.get(clientId); // return undefined if there is no entry in the Map\n    const clientMediaStreams = this.mediaStreams[clientId] = this.mediaStreams[clientId] || {};\n\n    if (streamName === \"default\") {\n      // Safari doesn't like it when you use a mixed media stream where one of the tracks is inactive, so we\n      // split the tracks into two streams.\n      // Add mediaStreams audio streamName alias\n      const audioTracks = stream.getAudioTracks();\n      if (audioTracks.length > 0) {\n        const audioStream = new MediaStream();\n        try {\n          audioTracks.forEach(track => audioStream.addTrack(track));\n          clientMediaStreams.audio = audioStream;\n        } catch(e) {\n          NAF.log.warn(`${clientId} setMediaStream \"audio\" alias Error`, e);\n        }\n\n        // Resolve the promise for the user's media stream audio alias if it exists.\n        if (pendingMediaRequests) pendingMediaRequests.audio.resolve(audioStream);\n      }\n\n      // Add mediaStreams video streamName alias\n      const videoTracks = stream.getVideoTracks();\n      if (videoTracks.length > 0) {\n        const videoStream = new MediaStream();\n        try {\n          videoTracks.forEach(track => videoStream.addTrack(track));\n          clientMediaStreams.video = videoStream;\n        } catch(e) {\n          NAF.log.warn(`${clientId} setMediaStream \"video\" alias Error`, e);\n        }\n\n        // Resolve the promise for the user's media stream video alias if it exists.\n        if (pendingMediaRequests) pendingMediaRequests.video.resolve(videoStream);\n      }\n    } else {\n      clientMediaStreams[streamName] = stream;\n\n      // Resolve the promise for the user's media stream by StreamName if it exists.\n      if (pendingMediaRequests && pendingMediaRequests[streamName]) {\n        pendingMediaRequests[streamName].resolve(stream);\n      }\n    }\n  }\n\n  addLocalMediaStream(stream, streamName) {\n    const easyrtc = this.easyrtc;\n    streamName = streamName || stream.id;\n    this.setMediaStream(\"local\", stream, streamName);\n    easyrtc.register3rdPartyLocalMediaStream(stream, streamName);\n\n    // Add local stream to existing connections\n    Object.keys(this.remoteClients).forEach((clientId) => {\n      if (easyrtc.getConnectStatus(clientId) !== easyrtc.NOT_CONNECTED) {\n        easyrtc.addStreamToCall(clientId, streamName);\n      }\n    });\n  }\n\n  removeLocalMediaStream(streamName) {\n    this.easyrtc.closeLocalMediaStream(streamName);\n    delete this.mediaStreams[\"local\"][streamName];\n  }\n\n  enableMicrophone(enabled) {\n    this.easyrtc.enableMicrophone(enabled);\n  }\n\n  enableCamera(enabled) {\n    this.easyrtc.enableCamera(enabled);\n  }\n\n  disconnect() {\n    this.easyrtc.disconnect();\n  }\n\n  /**\n   * Privates\n   */\n\n  _connect(connectSuccess, connectFailure) {\n    var that = this;\n\n    this.easyrtc.setStreamAcceptor(this.setMediaStream.bind(this));\n\n    this.easyrtc.setOnStreamClosed(function(clientId, stream, streamName) {\n      if (streamName === \"default\") {\n        delete that.mediaStreams[clientId].audio;\n        delete that.mediaStreams[clientId].video;\n      } else {\n        delete that.mediaStreams[clientId][streamName];\n      }\n\n      if (Object.keys(that.mediaStreams[clientId]).length === 0) {\n        delete that.mediaStreams[clientId];\n      }\n    });\n\n    if (that.easyrtc.audioEnabled || that.easyrtc.videoEnabled) {\n      navigator.mediaDevices.getUserMedia({\n        video: that.easyrtc.videoEnabled,\n        audio: that.easyrtc.audioEnabled\n      }).then(\n        function(stream) {\n          that.addLocalMediaStream(stream, \"default\");\n          that.easyrtc.connect(that.app, connectSuccess, connectFailure);\n        },\n        function(errorCode, errmesg) {\n          NAF.log.error(errorCode, errmesg);\n        }\n      );\n    } else {\n      that.easyrtc.connect(that.app, connectSuccess, connectFailure);\n    }\n  }\n\n  _getRoomJoinTime(clientId) {\n    var myRoomId = NAF.room;\n    var joinTime = this.easyrtc.getRoomOccupantsAsMap(myRoomId)[clientId]\n      .roomJoinTime;\n    return joinTime;\n  }\n\n  getServerTime() {\n    return Date.now() + this.avgTimeOffset;\n  }\n}\n\nmodule.exports = EasyRtcAdapter;\n","var NafInterface = require('../NafInterface');\n\nclass NoOpAdapter extends NafInterface {\n\n  /* Pre-Connect setup methods - Call before `connect` */\n\n  setServerUrl(url) {this.notImplemented('setServerUrl')}\n  setApp(app) {this.notImplemented('setApp')}\n  setRoom(roomName) {this.notImplemented('setRoom')}\n  setWebRtcOptions(options) {this.notImplemented('setWebRtcOptions')}\n\n  setServerConnectListeners(successListener, failureListener) {this.notImplemented('setServerConnectListeners')}\n  setRoomOccupantListener(occupantListener){this.notImplemented('setRoomOccupantListener')}\n  setDataChannelListeners(openListener, closedListener, messageListener) {this.notImplemented('setDataChannelListeners')}\n\n  connect() {this.notImplemented('connect')}\n  shouldStartConnectionTo(clientId) {this.notImplemented('shouldStartConnectionTo')}\n  startStreamConnection(clientId) {this.notImplemented('startStreamConnection')}\n  closeStreamConnection(clientId) {this.notImplemented('closeStreamConnection')}\n  getConnectStatus(clientId) {this.notImplemented('getConnectStatus')}\n\n  getMediaStream(clientId) { return Promise.reject(\"Interface method not implemented: getMediaStream\")}\n\n  getServerTime() { this.notImplemented('getServerTime') }\n\n  sendData(clientId, dataType, data) {this.notImplemented('sendData')}\n  sendDataGuaranteed(clientId, dataType, data) {this.notImplemented('sendDataGuaranteed')}\n  broadcastData(dataType, data) {this.notImplemented('broadcastData')}\n  broadcastDataGuaranteed(dataType, data) {this.notImplemented('broadcastDataGuaranteed')}\n\n  disconnect() {this.notImplemented('disconnect')}\n}\n\nmodule.exports = NoOpAdapter;\n","/* global NAF */\nconst NoOpAdapter = require('./NoOpAdapter');\n\nclass WsEasyRtcInterface extends NoOpAdapter {\n\n  constructor(easyrtc) {\n    super();\n\n    this.easyrtc = easyrtc || window.easyrtc;\n    this.app = 'default';\n    this.room = 'default';\n\n    this.connectedClients = [];\n\n    this.serverTimeRequests = 0;\n    this.timeOffsets = [];\n    this.avgTimeOffset = 0;\n  }\n\n  setServerUrl(url) {\n    this.serverUrl = url;\n    this.easyrtc.setSocketUrl(url);\n  }\n\n  setApp(appName) {\n    this.app = appName;\n  }\n\n  setRoom(roomName) {\n    this.room = roomName;\n    this.easyrtc.joinRoom(roomName, null);\n  }\n\n  setWebRtcOptions(options) {\n    // No webrtc support\n  }\n\n  setServerConnectListeners(successListener, failureListener) {\n    this.connectSuccess = successListener;\n    this.connectFailure = failureListener;\n  }\n\n  setRoomOccupantListener(occupantListener){\n    this.easyrtc.setRoomOccupantListener(function(roomName, occupants, primary) {\n      occupantListener(occupants);\n    });\n  }\n\n  setDataChannelListeners(openListener, closedListener, messageListener) {\n    this.openListener = openListener;\n    this.closedListener = closedListener;\n    this.easyrtc.setPeerListener(messageListener);\n  }\n\n  updateTimeOffset() {\n    const clientSentTime = Date.now() + this.avgTimeOffset;\n\n    return fetch(document.location.href, { method: \"HEAD\", cache: \"no-cache\" })\n      .then(res => {\n        var precision = 1000;\n        var serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + (precision / 2);\n        var clientReceivedTime = Date.now();\n        var serverTime = serverReceivedTime + ((clientReceivedTime - clientSentTime) / 2);\n        var timeOffset = serverTime - clientReceivedTime;\n\n        this.serverTimeRequests++;\n\n        if (this.serverTimeRequests <= 10) {\n          this.timeOffsets.push(timeOffset);\n        } else {\n          this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\n        }\n\n        this.avgTimeOffset = this.timeOffsets.reduce((acc, offset) => acc += offset, 0) / this.timeOffsets.length;\n\n        if (this.serverTimeRequests > 10) {\n          setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\n        } else {\n          this.updateTimeOffset();\n        }\n      });\n  }\n\n  connect() {\n    Promise.all([\n      this.updateTimeOffset(),\n      new Promise((resolve, reject) => {\n        this.easyrtc.connect(this.app, resolve, reject);\n      })\n    ]).then(([_, clientId]) => {\n      this.connectSuccess(clientId);\n    }).catch(this.connectFailure);\n  }\n\n  shouldStartConnectionTo(clientId) {\n    return true;\n  }\n\n  startStreamConnection(clientId) {\n    this.connectedClients.push(clientId);\n    this.openListener(clientId);\n  }\n\n  closeStreamConnection(clientId) {\n    var index = this.connectedClients.indexOf(clientId);\n    if (index > -1) {\n      this.connectedClients.splice(index, 1);\n    }\n    this.closedListener(clientId);\n  }\n\n  sendData(clientId, dataType, data) {\n    this.easyrtc.sendDataWS(clientId, dataType, data);\n  }\n\n  sendDataGuaranteed(clientId, dataType, data) {\n    this.sendData(clientId, dataType, data);\n  }\n\n  broadcastData(dataType, data) {\n    var destination = {targetRoom: this.room};\n    this.easyrtc.sendDataWS(destination, dataType, data);\n  }\n\n  broadcastDataGuaranteed(dataType, data) {\n    this.broadcastData(dataType, data);\n  }\n\n  getConnectStatus(clientId) {\n    var connected = this.connectedClients.indexOf(clientId) != -1;\n\n    if (connected) {\n      return NAF.adapters.IS_CONNECTED;\n    } else {\n      return NAF.adapters.NOT_CONNECTED;\n    }\n  }\n\n  getServerTime() {\n    return Date.now() + this.avgTimeOffset;\n  }\n\n  disconnect() {\n    this.easyrtc.disconnect();\n  }\n}\n\nmodule.exports = WsEasyRtcInterface;","/* global NAF, io */\n\n/**\n * SocketIO Adapter (socketio)\n * networked-scene: serverURL needs to be ws://localhost:8080 when running locally\n */\nclass SocketioAdapter {\n  constructor() {\n    if (io === undefined)\n      console.warn('It looks like socket.io has not been loaded before SocketioAdapter. Please do that.')\n\n    this.app = \"default\";\n    this.room = \"default\";\n    this.occupantListener = null;\n    this.myRoomJoinTime = null;\n    this.myId = null;\n\n    this.occupants = {}; // id -> joinTimestamp\n    this.connectedClients = [];\n\n    this.serverTimeRequests = 0;\n    this.timeOffsets = [];\n    this.avgTimeOffset = 0;\n  }\n\n  setServerUrl(wsUrl) {\n    this.wsUrl = wsUrl;\n  }\n\n  setApp(appName) {\n    this.app = appName;\n  }\n\n  setRoom(roomName) {\n    this.room = roomName;\n  }\n\n  setWebRtcOptions(options) {\n    // No WebRTC support\n  }\n\n  setServerConnectListeners(successListener, failureListener) {\n    this.connectSuccess = successListener;\n    this.connectFailure = failureListener;\n  }\n\n  setRoomOccupantListener(occupantListener) {\n    this.occupantListener = occupantListener;\n  }\n\n  setDataChannelListeners(openListener, closedListener, messageListener) {\n    this.openListener = openListener;\n    this.closedListener = closedListener;\n    this.messageListener = messageListener;\n  }\n\n  connect() {\n    const self = this;\n\n    this.updateTimeOffset()\n    .then(() => {\n      if (!self.wsUrl || self.wsUrl === \"/\") {\n        if (location.protocol === \"https:\") {\n          self.wsUrl = \"wss://\" + location.host;\n        } else {\n          self.wsUrl = \"ws://\" + location.host;\n        }\n      }\n\n      NAF.log.write(\"Attempting to connect to socket.io\");\n      const socket = self.socket = io(self.wsUrl);\n\n      socket.on(\"connect\", () => {\n        NAF.log.write(\"User connected\", socket.id);\n        self.myId = socket.id;\n        self.joinRoom();\n      });\n\n      socket.on(\"connectSuccess\", (data) => {\n        const { joinedTime } = data;\n\n        self.myRoomJoinTime = joinedTime;\n        NAF.log.write(\"Successfully joined room\", self.room, \"at server time\", joinedTime);\n\n        self.connectSuccess(self.myId);\n      });\n\n      socket.on(\"error\", err => {\n        console.error(\"Socket connection failure\", err);\n        self.connectFailure();\n      });\n\n      socket.on(\"occupantsChanged\", data => {\n        const { occupants } = data;\n        NAF.log.write('occupants changed', data);\n        self.receivedOccupants(occupants);\n      });\n\n      function receiveData(packet) {\n        const from = packet.from;\n        const type = packet.type;\n        const data = packet.data;\n        self.messageListener(from, type, data);\n      }\n\n      socket.on(\"send\", receiveData);\n      socket.on(\"broadcast\", receiveData);\n    })\n  }\n\n  joinRoom() {\n    NAF.log.write(\"Joining room\", this.room);\n    this.socket.emit(\"joinRoom\", { room: this.room });\n  }\n\n  receivedOccupants(occupants) {\n    delete occupants[this.myId];\n    this.occupants = occupants;\n    this.occupantListener(occupants);\n  }\n\n  shouldStartConnectionTo(client) {\n    return true;\n  }\n\n  startStreamConnection(remoteId) {\n    this.connectedClients.push(remoteId);\n    this.openListener(remoteId);\n  }\n\n  closeStreamConnection(clientId) {\n    this.connectedClients = this.connectedClients.filter(c => c != clientId);\n    this.closedListener(clientId);\n  }\n\n  getConnectStatus(clientId) {\n    var connected = this.connectedClients.indexOf(clientId) != -1;\n\n    if (connected) {\n      return NAF.adapters.IS_CONNECTED;\n    } else {\n      return NAF.adapters.NOT_CONNECTED;\n    }\n  }\n\n  sendData(to, type, data) {\n    this.sendDataGuaranteed(to, type, data);\n  }\n\n  sendDataGuaranteed(to, type, data) {\n    const packet = {\n      from: this.myId,\n      to,\n      type,\n      data,\n      sending: true,\n    };\n\n    if (this.socket) {\n      this.socket.emit(\"send\", packet);\n    } else {\n      NAF.log.warn('SocketIO socket not created yet');\n    }\n  }\n\n  broadcastData(type, data) {\n    this.broadcastDataGuaranteed(type, data);\n  }\n\n  broadcastDataGuaranteed(type, data) {\n    const packet = {\n      from: this.myId,\n      type,\n      data,\n      broadcasting: true\n    };\n\n    if (this.socket) {\n      this.socket.emit(\"broadcast\", packet);\n    } else {\n      NAF.log.warn('SocketIO socket not created yet');\n    }\n  }\n\n  getMediaStream(clientId) {\n    // Do not support WebRTC\n  }\n\n  updateTimeOffset() {\n    const clientSentTime = Date.now() + this.avgTimeOffset;\n\n    return fetch(document.location.href, { method: \"HEAD\", cache: \"no-cache\" })\n      .then(res => {\n        var precision = 1000;\n        var serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + (precision / 2);\n        var clientReceivedTime = Date.now();\n        var serverTime = serverReceivedTime + ((clientReceivedTime - clientSentTime) / 2);\n        var timeOffset = serverTime - clientReceivedTime;\n\n        this.serverTimeRequests++;\n\n        if (this.serverTimeRequests <= 10) {\n          this.timeOffsets.push(timeOffset);\n        } else {\n          this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\n        }\n\n        this.avgTimeOffset = this.timeOffsets.reduce((acc, offset) => acc += offset, 0) / this.timeOffsets.length;\n\n        if (this.serverTimeRequests > 10) {\n          setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\n        } else {\n          this.updateTimeOffset();\n        }\n      });\n  }\n\n  getServerTime() {\n    return new Date().getTime() + this.avgTimeOffset;\n  }\n\n  disconnect() {\n    this.socket.disconnect();\n  }\n}\n\n// NAF.adapters.register(\"socketio\", SocketioAdapter);\n\nmodule.exports = SocketioAdapter;\n","/* global NAF, io */\n\nclass WebRtcPeer {\n  constructor(localId, remoteId, sendSignalFunc) {\n    this.localId = localId;\n    this.remoteId = remoteId;\n    this.sendSignalFunc = sendSignalFunc;\n    this.open = false;\n    this.channelLabel = \"networked-aframe-channel\";\n\n    this.pc = this.createPeerConnection();\n    this.channel = null;\n  }\n\n  setDatachannelListeners(openListener, closedListener, messageListener, trackListener) {\n    this.openListener = openListener;\n    this.closedListener = closedListener;\n    this.messageListener = messageListener;\n    this.trackListener = trackListener;\n  }\n\n  offer(options) {\n    const self = this;\n    // reliable: false - UDP\n    this.setupChannel(\n      this.pc.createDataChannel(this.channelLabel, { reliable: false })\n    );\n\n    // If there are errors with Safari implement this:\n    // https://github.com/OpenVidu/openvidu/blob/master/openvidu-browser/src/OpenViduInternal/WebRtcPeer/WebRtcPeer.ts#L154\n    \n    if (options.sendAudio) {\n      options.localAudioStream.getTracks().forEach(\n        track => self.pc.addTrack(track, options.localAudioStream));\n    }\n\n    this.pc.createOffer(\n      sdp => {\n        self.handleSessionDescription(sdp);\n      },\n      error => {\n        NAF.log.error(\"WebRtcPeer.offer: \" + error);\n      },\n      {\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: false,\n      }\n    );\n  }\n\n  handleSignal(signal) {\n    // ignores signal if it isn't for me\n    if (this.localId !== signal.to || this.remoteId !== signal.from) return;\n\n    switch (signal.type) {\n      case \"offer\":\n        this.handleOffer(signal);\n        break;\n\n      case \"answer\":\n        this.handleAnswer(signal);\n        break;\n\n      case \"candidate\":\n        this.handleCandidate(signal);\n        break;\n\n      default:\n        NAF.log.error(\n          \"WebRtcPeer.handleSignal: Unknown signal type \" + signal.type\n        );\n        break;\n    }\n  }\n\n  send(type, data) {\n    if (this.channel === null || this.channel.readyState !== \"open\") {\n      return;\n    }\n\n    this.channel.send(JSON.stringify({ type: type, data: data }));\n  }\n\n  getStatus() {\n    if (this.channel === null) return WebRtcPeer.NOT_CONNECTED;\n\n    switch (this.channel.readyState) {\n      case \"open\":\n        return WebRtcPeer.IS_CONNECTED;\n\n      case \"connecting\":\n        return WebRtcPeer.CONNECTING;\n\n      case \"closing\":\n      case \"closed\":\n      default:\n        return WebRtcPeer.NOT_CONNECTED;\n    }\n  }\n\n  /*\n   * Privates\n   */\n\n  createPeerConnection() {\n    const self = this;\n    const RTCPeerConnection =\n      window.RTCPeerConnection ||\n      window.webkitRTCPeerConnection ||\n      window.mozRTCPeerConnection ||\n      window.msRTCPeerConnection;\n\n    if (RTCPeerConnection === undefined) {\n      throw new Error(\n        \"WebRtcPeer.createPeerConnection: This browser does not seem to support WebRTC.\"\n      );\n    }\n\n    const pc = new RTCPeerConnection({ iceServers: WebRtcPeer.ICE_SERVERS });\n\n    pc.onicecandidate = function(event) {\n      if (event.candidate) {\n        self.sendSignalFunc({\n          from: self.localId,\n          to: self.remoteId,\n          type: \"candidate\",\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n          candidate: event.candidate.candidate\n        });\n      }\n    };\n\n    // Note: seems like channel.onclose hander is unreliable on some platforms,\n    //       so also tries to detect disconnection here.\n    pc.oniceconnectionstatechange = function() {\n      if (self.open && pc.iceConnectionState === \"disconnected\") {\n        self.open = false;\n        self.closedListener(self.remoteId);\n      }\n    };\n\n    pc.ontrack = (e) => {\n      self.trackListener(self.remoteId, e.streams[0]);\n    }\n\n    return pc;\n  }\n\n  setupChannel(channel) {\n    const self = this;\n\n    this.channel = channel;\n\n    // received data from a remote peer\n    this.channel.onmessage = function(event) {\n      const data = JSON.parse(event.data);\n      self.messageListener(self.remoteId, data.type, data.data);\n    };\n\n    // connected with a remote peer\n    this.channel.onopen = function(_event) {\n      self.open = true;\n      self.openListener(self.remoteId);\n    };\n\n    // disconnected with a remote peer\n    this.channel.onclose = function(_event) {\n      if (!self.open) return;\n      self.open = false;\n      self.closedListener(self.remoteId);\n    };\n\n    // error occurred with a remote peer\n    this.channel.onerror = function(error) {\n      NAF.log.error(\"WebRtcPeer.channel.onerror: \" + error);\n    };\n  }\n\n  handleOffer(message) {\n    const self = this;\n\n    this.pc.ondatachannel = function(event) {\n      self.setupChannel(event.channel);\n    };\n\n    this.setRemoteDescription(message);\n\n    this.pc.createAnswer(\n      function(sdp) {\n        self.handleSessionDescription(sdp);\n      },\n      function(error) {\n        NAF.log.error(\"WebRtcPeer.handleOffer: \" + error);\n      }\n    );\n  }\n\n  handleAnswer(message) {\n    this.setRemoteDescription(message);\n  }\n\n  handleCandidate(message) {\n    const RTCIceCandidate =\n      window.RTCIceCandidate ||\n      window.webkitRTCIceCandidate ||\n      window.mozRTCIceCandidate;\n\n    this.pc.addIceCandidate(\n      new RTCIceCandidate(message),\n      function() {},\n      function(error) {\n        NAF.log.error(\"WebRtcPeer.handleCandidate: \" + error);\n      }\n    );\n  }\n\n  handleSessionDescription(sdp) {\n    this.pc.setLocalDescription(\n      sdp,\n      function() {},\n      function(error) {\n        NAF.log.error(\"WebRtcPeer.handleSessionDescription: \" + error);\n      }\n    );\n\n    this.sendSignalFunc({\n      from: this.localId,\n      to: this.remoteId,\n      type: sdp.type,\n      sdp: sdp.sdp\n    });\n  }\n\n  setRemoteDescription(message) {\n    const RTCSessionDescription =\n      window.RTCSessionDescription ||\n      window.webkitRTCSessionDescription ||\n      window.mozRTCSessionDescription ||\n      window.msRTCSessionDescription;\n\n    this.pc.setRemoteDescription(\n      new RTCSessionDescription(message),\n      function() {},\n      function(error) {\n        NAF.log.error(\"WebRtcPeer.setRemoteDescription: \" + error);\n      }\n    );\n  }\n\n  close() {\n    if (this.pc) {\n      this.pc.close();\n    }\n  }\n}\n\nWebRtcPeer.IS_CONNECTED = \"IS_CONNECTED\";\nWebRtcPeer.CONNECTING = \"CONNECTING\";\nWebRtcPeer.NOT_CONNECTED = \"NOT_CONNECTED\";\n\nWebRtcPeer.ICE_SERVERS = [\n  { urls: \"stun:stun1.l.google.com:19302\" },\n  { urls: \"stun:stun2.l.google.com:19302\" },\n  { urls: \"stun:stun3.l.google.com:19302\" },\n  { urls: \"stun:stun4.l.google.com:19302\" }\n];\n\n/**\n * Native WebRTC Adapter (native-webrtc)\n * For use with uws-server.js\n * networked-scene: serverURL needs to be ws://localhost:8080 when running locally\n */\nclass WebrtcAdapter {\n  constructor() {\n    if (io === undefined)\n      console.warn('It looks like socket.io has not been loaded before WebrtcAdapter. Please do that.')\n\n    this.app = \"default\";\n    this.room = \"default\";\n    this.occupantListener = null;\n    this.myRoomJoinTime = null;\n    this.myId = null;\n\n    this.peers = {}; // id -> WebRtcPeer\n    this.occupants = {}; // id -> joinTimestamp\n\n    this.audioStreams = {};\n    this.pendingAudioRequest = {};\n\n    this.serverTimeRequests = 0;\n    this.timeOffsets = [];\n    this.avgTimeOffset = 0;\n  }\n\n  setServerUrl(wsUrl) {\n    this.wsUrl = wsUrl;\n  }\n\n  setApp(appName) {\n    this.app = appName;\n  }\n\n  setRoom(roomName) {\n    this.room = roomName;\n  }\n\n  setWebRtcOptions(options) {\n    if (options.datachannel === false) {\n      NAF.log.error(\n        \"WebrtcAdapter.setWebRtcOptions: datachannel must be true.\"\n      );\n    }\n    if (options.audio === true) {\n      this.sendAudio = true;\n    }\n    if (options.video === true) {\n      NAF.log.warn(\"WebrtcAdapter does not support video yet.\");\n    }\n  }\n\n  setServerConnectListeners(successListener, failureListener) {\n    this.connectSuccess = successListener;\n    this.connectFailure = failureListener;\n  }\n\n  setRoomOccupantListener(occupantListener) {\n    this.occupantListener = occupantListener;\n  }\n\n  setDataChannelListeners(openListener, closedListener, messageListener) {\n    this.openListener = openListener;\n    this.closedListener = closedListener;\n    this.messageListener = messageListener;\n  }\n\n  connect() {\n    const self = this;\n\n    this.updateTimeOffset()\n    .then(() => {\n      if (!self.wsUrl || self.wsUrl === \"/\") {\n        if (location.protocol === \"https:\") {\n          self.wsUrl = \"wss://\" + location.host;\n        } else {\n          self.wsUrl = \"ws://\" + location.host;\n        }\n      }\n  \n      NAF.log.write(\"Attempting to connect to socket.io\");\n      const socket = self.socket = io(self.wsUrl);\n  \n      socket.on(\"connect\", () => {\n        NAF.log.write(\"User connected\", socket.id);\n        self.myId = socket.id;\n        self.joinRoom();\n      });\n  \n      socket.on(\"connectSuccess\", (data) => {\n        const { joinedTime } = data;\n  \n        self.myRoomJoinTime = joinedTime;\n        NAF.log.write(\"Successfully joined room\", self.room, \"at server time\", joinedTime);\n  \n        if (self.sendAudio) {\n          const mediaConstraints = {\n            audio: true,\n            video: false\n          };\n          navigator.mediaDevices.getUserMedia(mediaConstraints)\n          .then(localStream => {\n            self.storeAudioStream(self.myId, localStream);\n            self.connectSuccess(self.myId);\n            localStream.getTracks().forEach(\n              track => {\n                Object.keys(self.peers).forEach(peerId => { \n                self.peers[peerId].pc.addTrack(track, localStream) \n              })\n            })\n          })\n          .catch(e => {\n            NAF.log.error(e);\n            console.error(\"Microphone is disabled due to lack of permissions\");\n            self.sendAudio = false;\n            self.connectSuccess(self.myId);\n          });\n        } else {\n          self.connectSuccess(self.myId);\n        }\n      });\n  \n      socket.on(\"error\", err => {\n        console.error(\"Socket connection failure\", err);\n        self.connectFailure();\n      });\n  \n      socket.on(\"occupantsChanged\", data => {\n        const { occupants } = data;\n        NAF.log.write('occupants changed', data);\n        self.receivedOccupants(occupants);\n      });\n  \n      function receiveData(packet) {\n        const from = packet.from;\n        const type = packet.type;\n        const data = packet.data;\n        if (type === 'ice-candidate') {\n          self.peers[from].handleSignal(data);\n          return;\n        }\n        self.messageListener(from, type, data);\n      }\n  \n      socket.on(\"send\", receiveData);\n      socket.on(\"broadcast\", receiveData);\n    })\n  }\n\n  joinRoom() {\n    NAF.log.write(\"Joining room\", this.room);\n    this.socket.emit(\"joinRoom\", { room: this.room });\n  }\n\n  receivedOccupants(occupants) {\n    delete occupants[this.myId];\n\n    this.occupants = occupants;\n\n    const self = this;\n    const localId = this.myId;\n\n    for (let key in occupants) {\n      const remoteId = key;\n      if (this.peers[remoteId]) continue;\n\n      const peer = new WebRtcPeer(\n        localId,\n        remoteId,\n        (data) => {\n          self.socket.emit('send',{\n            from: localId,\n            to: remoteId,\n            type: 'ice-candidate',\n            data,\n            sending: true,\n          });\n        }\n      );\n      peer.setDatachannelListeners(\n        self.openListener,\n        self.closedListener,\n        self.messageListener,\n        self.trackListener.bind(self)\n      );\n\n      self.peers[remoteId] = peer;\n    }\n\n    this.occupantListener(occupants);\n  }\n\n  shouldStartConnectionTo(client) {\n    return (this.myRoomJoinTime || 0) <= (client || 0);\n  }\n\n  startStreamConnection(remoteId) {\n    NAF.log.write('starting offer process');\n\n    if (this.sendAudio) {\n      this.getMediaStream(this.myId)\n      .then(stream => {\n        const options = {\n          sendAudio: true,\n          localAudioStream: stream,\n        };\n        this.peers[remoteId].offer(options);\n      });\n    } else {\n      this.peers[remoteId].offer({});\n    }\n  }\n\n  closeStreamConnection(clientId) {\n    NAF.log.write('closeStreamConnection', clientId, this.peers);\n    this.peers[clientId].close();\n    delete this.peers[clientId];\n    delete this.occupants[clientId];\n    this.closedListener(clientId);\n  }\n\n  getConnectStatus(clientId) {\n    const peer = this.peers[clientId];\n\n    if (peer === undefined) return NAF.adapters.NOT_CONNECTED;\n\n    switch (peer.getStatus()) {\n      case WebRtcPeer.IS_CONNECTED:\n        return NAF.adapters.IS_CONNECTED;\n\n      case WebRtcPeer.CONNECTING:\n        return NAF.adapters.CONNECTING;\n\n      case WebRtcPeer.NOT_CONNECTED:\n      default:\n        return NAF.adapters.NOT_CONNECTED;\n    }\n  }\n\n  sendData(to, type, data) {\n    this.peers[to].send(type, data);\n  }\n\n  sendDataGuaranteed(to, type, data) {\n    const packet = {\n      from: this.myId,\n      to,\n      type,\n      data,\n      sending: true,\n    };\n\n    this.socket.emit(\"send\", packet);\n  }\n\n  broadcastData(type, data) {\n    for (let clientId in this.peers) {\n      this.sendData(clientId, type, data);\n    }\n  }\n\n  broadcastDataGuaranteed(type, data) {\n    const packet = {\n      from: this.myId,\n      type,\n      data,\n      broadcasting: true\n    };\n    this.socket.emit(\"broadcast\", packet);\n  }\n\n  storeAudioStream(clientId, stream) {\n    this.audioStreams[clientId] = stream;\n    if (this.pendingAudioRequest[clientId]) {\n      NAF.log.write(\"Received pending audio for \" + clientId);\n      this.pendingAudioRequest[clientId](stream);\n      delete this.pendingAudioRequest[clientId](stream);\n    }\n  }\n\n  trackListener(clientId, stream) {\n    this.storeAudioStream(clientId, stream);\n  }\n\n  getMediaStream(clientId) {\n    const self = this;\n    if (this.audioStreams[clientId]) {\n      NAF.log.write(\"Already had audio for \" + clientId);\n      return Promise.resolve(this.audioStreams[clientId]);\n    } else {\n      NAF.log.write(\"Waiting on audio for \" + clientId);\n      return new Promise(resolve => {\n        self.pendingAudioRequest[clientId] = resolve;\n      });\n    }\n  }\n\n  updateTimeOffset() {\n    const clientSentTime = Date.now() + this.avgTimeOffset;\n\n    return fetch(document.location.href, { method: \"HEAD\", cache: \"no-cache\" })\n      .then(res => {\n        const precision = 1000;\n        const serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + (precision / 2);\n        const clientReceivedTime = Date.now();\n        const serverTime = serverReceivedTime + ((clientReceivedTime - clientSentTime) / 2);\n        const timeOffset = serverTime - clientReceivedTime;\n\n        this.serverTimeRequests++;\n\n        if (this.serverTimeRequests <= 10) {\n          this.timeOffsets.push(timeOffset);\n        } else {\n          this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\n        }\n\n        this.avgTimeOffset = this.timeOffsets.reduce((acc, offset) => acc += offset, 0) / this.timeOffsets.length;\n\n        if (this.serverTimeRequests > 10) {\n          setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\n        } else {\n          this.updateTimeOffset();\n        }\n      });\n  }\n\n  getServerTime() {\n    return new Date().getTime() + this.avgTimeOffset;\n  }\n}\n\n// NAF.adapters.register(\"native-webrtc\", WebrtcAdapter);\n\nmodule.exports = WebrtcAdapter;\n","/* global AFRAME, NAF, THREE */\nvar naf = require('../NafIndex');\n\nAFRAME.registerComponent('networked-audio-source', {\n  schema: {\n    streamName: { default: 'audio' },\n    positional: { default: true },\n    distanceModel: {\n      default: \"inverse\",\n      oneOf: [\"linear\", \"inverse\", \"exponential\"]\n    },\n    maxDistance: { default: 10000 },\n    refDistance: { default: 1 },\n    rolloffFactor: { default: 1 }\n  },\n\n  init: function () {\n    this.listener = null;\n    this.stream = null;\n\n    this._setMediaStream = this._setMediaStream.bind(this);\n\n    NAF.utils.getNetworkedEntity(this.el).then((networkedEl) => {\n      const ownerId = networkedEl.components.networked.data.owner;\n\n      if (ownerId) {\n        NAF.connection.adapter.getMediaStream(ownerId, this.data.streamName)\n          .then(this._setMediaStream)\n          .catch((e) => naf.log.error(`Error getting media stream for ${ownerId}`, e));\n      } else {\n        // Correctly configured local entity, perhaps do something here for enabling debug audio loopback\n      }\n    });\n  },\n\n  update() {\n    this._setPannerProperties();\n  },\n\n  _setMediaStream(newStream) {\n    if(!this.sound) {\n      this.setupSound();\n    }\n\n    if(newStream != this.stream) {\n      if(this.stream) {\n        this.sound.disconnect();\n      }\n      if(newStream) {\n        // Chrome seems to require a MediaStream be attached to an AudioElement before AudioNodes work correctly\n        // We don't want to do this in other browsers, particularly in Safari, which actually plays the audio despite\n        // setting the volume to 0.\n        if (/chrome/i.test(navigator.userAgent)) {\n          this.audioEl = new Audio();\n          this.audioEl.setAttribute(\"autoplay\", \"autoplay\");\n          this.audioEl.setAttribute(\"playsinline\", \"playsinline\");\n          this.audioEl.srcObject = newStream;\n          this.audioEl.volume = 0; // we don't actually want to hear audio from this element\n        }\n\n        const soundSource = this.sound.context.createMediaStreamSource(newStream); \n        this.sound.setNodeSource(soundSource);\n        this.el.emit('sound-source-set', { soundSource });\n      }\n      this.stream = newStream;\n    }\n  },\n\n  _setPannerProperties() {\n    if (this.sound && this.data.positional) {\n      this.sound.setDistanceModel(this.data.distanceModel);\n      this.sound.setMaxDistance(this.data.maxDistance);\n      this.sound.setRefDistance(this.data.refDistance);\n      this.sound.setRolloffFactor(this.data.rolloffFactor);\n    }\n  },\n\n  remove: function() {\n    if (!this.sound) return;\n\n    this.el.removeObject3D(this.attrName);\n    if (this.stream) {\n      this.sound.disconnect();\n    }\n\n    if (this.audioEl) {\n      this.audioEl.pause();\n      this.audioEl.srcObject = null;\n      this.audioEl.load();\n      this.audioEl = null;\n    }\n  },\n\n  setupSound: function() {\n    var el = this.el;\n    var sceneEl = el.sceneEl;\n\n    if (this.sound) {\n      el.removeObject3D(this.attrName);\n    }\n\n    if (!sceneEl.audioListener) {\n      sceneEl.audioListener = new THREE.AudioListener();\n      sceneEl.camera && sceneEl.camera.add(sceneEl.audioListener);\n      sceneEl.addEventListener('camera-set-active', function(evt) {\n        evt.detail.cameraEl.getObject3D('camera').add(sceneEl.audioListener);\n      });\n    }\n    this.listener = sceneEl.audioListener;\n\n    this.sound = this.data.positional\n      ? new THREE.PositionalAudio(this.listener)\n      : new THREE.Audio(this.listener);\n    el.setObject3D(this.attrName, this.sound);\n    this._setPannerProperties();\n  }\n});\n","/* global AFRAME, NAF */\n\nAFRAME.registerComponent('networked-scene', {\n  schema: {\n    serverURL: {default: '/'},\n    app: {default: 'default'},\n    room: {default: 'default'},\n    connectOnLoad: {default: true},\n    onConnect: {default: 'onConnect'},\n    adapter: {default: 'wseasyrtc'}, // See https://github.com/networked-aframe/networked-aframe#adapters for list of adapters\n    audio: {default: false}, // Only if adapter supports audio\n    video: {default: false}, // Only if adapter supports video\n    debug: {default: false},\n  },\n\n  init: function() {\n    var el = this.el;\n    this.connect = this.connect.bind(this);\n    el.addEventListener('connect', this.connect);\n    if (this.data.connectOnLoad) {\n      el.emit('connect', null, false);\n    }\n  },\n\n  /**\n   * Connect to signalling server and begin connecting to other clients\n   */\n  connect: function () {\n    NAF.log.setDebug(this.data.debug);\n    NAF.log.write('Networked-Aframe Connecting...');\n\n    this.checkDeprecatedProperties();\n    this.setupNetworkAdapter();\n\n    if (this.hasOnConnectFunction()) {\n      this.callOnConnect();\n    }\n    return NAF.connection.connect(this.data.serverURL, this.data.app, this.data.room, this.data.audio, this.data.video);\n  },\n\n  checkDeprecatedProperties: function() {\n    // No current\n  },\n\n  setupNetworkAdapter: function() {\n    var adapterName = this.data.adapter;\n    var adapter = NAF.adapters.make(adapterName);\n    NAF.connection.setNetworkAdapter(adapter);\n    this.el.emit('adapter-ready', adapter, false);\n  },\n\n  hasOnConnectFunction: function() {\n    return this.data.onConnect != '' && window[this.data.onConnect];\n  },\n\n  callOnConnect: function() {\n    NAF.connection.onConnect(window[this.data.onConnect]);\n  },\n\n  remove: function() {\n    NAF.log.write('networked-scene disconnected');\n    this.el.removeEventListener('connect', this.connect);\n    NAF.connection.disconnect();\n  }\n});\n","/* global AFRAME, NAF, THREE */\nvar naf = require('../NafIndex');\n\nAFRAME.registerComponent('networked-video-source', {\n\n  schema: {\n    streamName: { default: 'video' },\n  },\n\n  dependencies: ['material'],\n\n  init: function () {\n    this.videoTexture = null;\n    this.video = null;\n    this.stream = null;\n\n    this._setMediaStream = this._setMediaStream.bind(this);\n\n    NAF.utils.getNetworkedEntity(this.el).then((networkedEl) => {\n      const ownerId = networkedEl.components.networked.data.owner;\n\n      if (ownerId) {\n        NAF.connection.adapter.getMediaStream(ownerId, this.data.streamName)\n          .then(this._setMediaStream)\n          .catch((e) => naf.log.error(`Error getting media stream for ${ownerId}`, e));\n      } else {\n        // Correctly configured local entity, perhaps do something here for enabling debug audio loopback\n      }\n    });\n  },\n\n  _setMediaStream(newStream) {\n\n    if(!this.video) {\n      this.setupVideo();\n    }\n\n    if(newStream != this.stream) {\n      if (this.stream) {\n        this._clearMediaStream();\n      }\n\n      if (newStream) {\n        this.video.srcObject = newStream;\n\n        const playResult = this.video.play();\n        if (playResult instanceof Promise) {\n          playResult.catch((e) => naf.log.error(`Error play video stream`, e));\n        }\n\n        if (this.videoTexture) {\n          this.videoTexture.dispose();\n        }\n\n        this.videoTexture = new THREE.VideoTexture(this.video);\n\n        const mesh = this.el.getObject3D('mesh');\n        mesh.material.map = this.videoTexture;\n        mesh.material.needsUpdate = true;\n      }\n\n      this.stream = newStream;\n    }\n  },\n\n  _clearMediaStream() {\n\n    this.stream = null;\n\n    if (this.videoTexture) {\n\n      if (this.videoTexture.image instanceof HTMLVideoElement) {\n        // Note: this.videoTexture.image === this.video\n        const video = this.videoTexture.image;\n        video.pause();\n        video.srcObject = null;\n        video.load();\n      }\n\n      this.videoTexture.dispose();\n      this.videoTexture = null;\n    }\n  },\n\n  remove: function() {\n      this._clearMediaStream();\n  },\n\n  setupVideo: function() {\n    if (!this.video) {\n      const video = document.createElement('video');\n      video.setAttribute('autoplay', true);\n      video.setAttribute('playsinline', true);\n      video.setAttribute('muted', true);\n      this.video = video;\n    }\n  }\n});","/* global AFRAME, NAF, THREE */\nvar deepEqual = require('../DeepEquals');\nvar InterpolationBuffer = require('buffered-interpolation');\nvar DEG2RAD = THREE.Math.DEG2RAD;\nvar OBJECT3D_COMPONENTS = ['position', 'rotation', 'scale'];\n\nfunction defaultRequiresUpdate() {\n  let cachedData = null;\n\n  return (newData) => {\n    if (cachedData === null || !deepEqual(cachedData, newData)) {\n      cachedData = AFRAME.utils.clone(newData);\n      return true;\n    }\n\n    return false;\n  };\n}\n\nfunction isValidVector3(v) {\n  return !!(\n    v.isVector3 &&\n    !isNaN(v.x) &&\n    !isNaN(v.y) &&\n    !isNaN(v.z) &&\n    v.x !== null &&\n    v.y !== null &&\n    v.z !== null\n  );\n}\nfunction isValidQuaternion(q) {\n  return !!(\n    q.isQuaternion &&\n    !isNaN(q.x) &&\n    !isNaN(q.y) &&\n    !isNaN(q.z) &&\n    !isNaN(q.w) &&\n    q.x !== null &&\n    q.y !== null &&\n    q.z !== null &&\n    q.w !== null\n  );\n}\n\nvar throttle = (function () {\n  var previousLogTime = 0;\n  return function throttle(f, milliseconds) {\n    var now = Date.now();\n    if (now - previousLogTime > milliseconds) {\n      previousLogTime = now;\n      f();\n    }\n  };\n})();\n\nfunction warnOnInvalidNetworkUpdate() {\n  NAF.log.warn(`Received invalid network update.`);\n}\n\nAFRAME.registerSystem(\"networked\", {\n  init() {\n    // An array of \"networked\" component instances.\n    this.components = [];\n    this.nextSyncTime = 0;\n  },\n\n  register(component) {\n    this.components.push(component);\n  },\n\n  deregister(component) {\n    const idx = this.components.indexOf(component);\n\n    if (idx > -1) {\n      this.components.splice(idx, 1);\n    }\n  },\n\n  tick: (function() {\n\n    return function() {\n      if (!NAF.connection.adapter) return;\n      if (this.el.clock.elapsedTime < this.nextSyncTime) return;\n\n      // \"d\" is an array of entity datas per entity in this.components.\n      const data = { d: [] };\n\n      for (let i = 0, l = this.components.length; i < l; i++) {\n        const c = this.components[i];\n        if (!c.isMine()) continue;\n        if (!c.el.parentElement) {\n          NAF.log.error(\"entity registered with system despite being removed\");\n          //TODO: Find out why tick is still being called\n          return;\n        }\n\n        const syncData = this.components[i].syncDirty();\n        if (!syncData) continue;\n\n        data.d.push(syncData);\n      }\n\n      if (data.d.length > 0) {\n        NAF.connection.broadcastData('um', data);\n      }\n\n      this.updateNextSyncTime();\n    };\n  })(),\n\n  updateNextSyncTime() {\n    this.nextSyncTime = this.el.clock.elapsedTime + 1 / NAF.options.updateRate;\n  }\n});\n\nAFRAME.registerComponent('networked', {\n  schema: {\n    template: {default: ''},\n    attachTemplateToLocal: { default: true },\n    persistent: { default: false },\n\n    networkId: {default: ''},\n    owner: {default: ''},\n    creator: {default: ''}\n  },\n\n  init: function() {\n    this.OWNERSHIP_GAINED = 'ownership-gained';\n    this.OWNERSHIP_CHANGED = 'ownership-changed';\n    this.OWNERSHIP_LOST = 'ownership-lost';\n\n    this.onOwnershipGainedEvent = {\n      el: this.el\n    };\n    this.onOwnershipChangedEvent = {\n      el: this.el\n    };\n    this.onOwnershipLostEvent = {\n      el: this.el\n    };\n\n    this.conversionEuler = new THREE.Euler();\n    this.conversionEuler.order = \"YXZ\";\n    this.bufferInfos = [];\n    this.bufferPosition = new THREE.Vector3();\n    this.bufferQuaternion = new THREE.Quaternion();\n    this.bufferScale = new THREE.Vector3();\n\n    var wasCreatedByNetwork = this.wasCreatedByNetwork();\n\n    this.onConnected = this.onConnected.bind(this);\n\n    this.syncData = {};\n    this.componentSchemas =  NAF.schemas.getComponents(this.data.template);\n    this.cachedElements = new Array(this.componentSchemas.length);\n    this.networkUpdatePredicates = this.componentSchemas.map(x => (x.requiresNetworkUpdate && x.requiresNetworkUpdate()) || defaultRequiresUpdate());\n\n    // Fill cachedElements array with null elements\n    this.invalidateCachedElements();\n\n    this.initNetworkParent();\n\n    let networkId;\n\n    if (this.data.networkId === '') {\n      networkId = NAF.utils.createNetworkId()\n      this.el.setAttribute(this.name, {networkId});\n    } else {\n      networkId = this.data.networkId;\n    }\n\n    if (!this.el.id) {\n      this.el.setAttribute('id', 'naf-' + networkId);\n    }\n\n    if (wasCreatedByNetwork) {\n      this.firstUpdate();\n    } else {\n      if (this.data.attachTemplateToLocal) {\n        this.attachTemplateToLocal();\n      }\n\n      this.registerEntity(this.data.networkId);\n    }\n\n    this.lastOwnerTime = -1;\n\n    if (NAF.clientId) {\n      this.onConnected();\n    } else {\n      document.body.addEventListener('connected', this.onConnected, false);\n    }\n\n    document.body.dispatchEvent(this.entityCreatedEvent());\n    this.el.dispatchEvent(new CustomEvent('instantiated', {detail: {el: this.el}}));\n    this.el.sceneEl.systems.networked.register(this);\n  },\n\n  attachTemplateToLocal: function() {\n    const template = NAF.schemas.getCachedTemplate(this.data.template);\n    const elAttrs = template.attributes;\n\n    // Merge root element attributes with this entity\n    for (let attrIdx = 0; attrIdx < elAttrs.length; attrIdx++) {\n      this.el.setAttribute(elAttrs[attrIdx].name, elAttrs[attrIdx].value);\n    }\n\n    // Append all child elements\n    while (template.firstElementChild) {\n      this.el.appendChild(template.firstElementChild);\n    }\n  },\n\n  takeOwnership: function() {\n    const owner = this.data.owner;\n    const lastOwnerTime = this.lastOwnerTime;\n    const now = NAF.connection.getServerTime();\n    if (owner && !this.isMine() && lastOwnerTime < now) {\n      this.lastOwnerTime = now;\n      this.removeLerp();\n      this.el.setAttribute('networked', { owner: NAF.clientId });\n      this.syncAll();\n\n      this.onOwnershipGainedEvent.oldOwner = owner;\n      this.el.emit(this.OWNERSHIP_GAINED, this.onOwnershipGainedEvent);\n\n      this.onOwnershipChangedEvent.oldOwner = owner;\n      this.onOwnershipChangedEvent.newOwner = NAF.clientId;\n      this.el.emit(this.OWNERSHIP_CHANGED, this.onOwnershipChangedEvent);\n\n      return true;\n    }\n    return false;\n  },\n\n  wasCreatedByNetwork: function() {\n    return !!this.el.firstUpdateData;\n  },\n\n  initNetworkParent: function() {\n    var parentEl = this.el.parentElement;\n    if (parentEl['components'] && parentEl.components['networked']) {\n      this.parent = parentEl;\n    } else {\n      this.parent = null;\n    }\n  },\n\n  registerEntity: function(networkId) {\n    NAF.entities.registerEntity(networkId, this.el);\n  },\n\n  applyPersistentFirstSync: function() {\n    const { networkId } = this.data;\n    const persistentFirstSync = NAF.entities.getPersistentFirstSync(networkId);\n    if (persistentFirstSync) {\n      this.networkUpdate(persistentFirstSync);\n      NAF.entities.forgetPersistentFirstSync(networkId);\n    }\n  },\n\n  firstUpdate: function() {\n    var entityData = this.el.firstUpdateData;\n    this.networkUpdate(entityData);\n  },\n\n  onConnected: function() {\n    if (this.data.owner === '') {\n      this.lastOwnerTime = NAF.connection.getServerTime();\n      this.el.setAttribute(this.name, { owner: NAF.clientId, creator: NAF.clientId });\n      setTimeout(() => {\n        //a-primitives attach their components on the next frame; wait for components to be attached before calling syncAll\n        if (!this.el.parentNode){\n          NAF.log.warn(\"Networked element was removed before ever getting the chance to syncAll\");\n          return;\n        }\n        this.syncAll(undefined, true);\n      }, 0);\n    }\n\n    document.body.removeEventListener('connected', this.onConnected, false);\n  },\n\n  isMine: function() {\n    return this.data.owner === NAF.clientId;\n  },\n\n  createdByMe: function() {\n    return this.data.creator === NAF.clientId;\n  },\n\n  tick: function(time, dt) {\n    if (!this.isMine() && NAF.options.useLerp) {\n      for (var i = 0; i < this.bufferInfos.length; i++) {\n        var bufferInfo = this.bufferInfos[i];\n        var buffer = bufferInfo.buffer;\n        var object3D = bufferInfo.object3D;\n        var componentNames = bufferInfo.componentNames;\n        buffer.update(dt);\n        if (componentNames.includes(\"position\")) {\n          const position = buffer.getPosition();\n          if (isValidVector3(position)) {\n            object3D.position.copy(position);\n          } else {\n            throttle(warnOnInvalidNetworkUpdate, 5000);\n          }\n        }\n        if (componentNames.includes(\"rotation\")) {\n          const quaternion = buffer.getQuaternion();\n          if (isValidQuaternion(quaternion)) {\n            object3D.quaternion.copy(quaternion);\n          } else {\n            throttle(warnOnInvalidNetworkUpdate, 5000);\n          }\n        }\n        if (componentNames.includes(\"scale\")) {\n          const scale = buffer.getScale();\n          if (isValidVector3(scale)) {\n            object3D.scale.copy(scale);\n          } else {\n            throttle(warnOnInvalidNetworkUpdate, 5000);\n          }\n        }\n      }\n    }\n  },\n\n  /* Sending updates */\n\n  syncAll: function(targetClientId, isFirstSync) {\n    if (!this.canSync()) {\n      return;\n    }\n\n    var components = this.gatherComponentsData(true);\n\n    var syncData = this.createSyncData(components, isFirstSync);\n\n    if (targetClientId) {\n      NAF.connection.sendDataGuaranteed(targetClientId, 'u', syncData);\n    } else {\n      NAF.connection.broadcastDataGuaranteed('u', syncData);\n    }\n  },\n\n  syncDirty: function() {\n    if (!this.canSync()) {\n      return;\n    }\n\n    var components = this.gatherComponentsData(false);\n\n    if (components === null) {\n      return;\n    }\n\n    return this.createSyncData(components);\n  },\n\n  getCachedElement(componentSchemaIndex) {\n    var cachedElement = this.cachedElements[componentSchemaIndex];\n\n    if (cachedElement) {\n      return cachedElement;\n    }\n\n    var componentSchema = this.componentSchemas[componentSchemaIndex];\n\n    if (componentSchema.selector) {\n      return this.cachedElements[componentSchemaIndex] = this.el.querySelector(componentSchema.selector);\n    } else {\n      return this.cachedElements[componentSchemaIndex] = this.el;\n    }\n  },\n\n  invalidateCachedElements() {\n    for (var i = 0; i < this.cachedElements.length; i++) {\n      this.cachedElements[i] = null;\n    }\n  },\n\n  gatherComponentsData: function(fullSync) {\n    var componentsData = null;\n\n    for (var i = 0; i < this.componentSchemas.length; i++) {\n      var componentSchema = this.componentSchemas[i];\n      var componentElement = this.getCachedElement(i);\n\n      if (!componentElement) {\n        if (fullSync) {\n          componentsData = componentsData || {};\n          componentsData[i] = null;\n        }\n        continue;\n      }\n\n      var componentName = componentSchema.component ? componentSchema.component : componentSchema;\n      var componentData = componentElement.getAttribute(componentName);\n\n      if (componentData === null) {\n        if (fullSync) {\n          componentsData = componentsData || {};\n          componentsData[i] = null;\n        }\n        continue;\n      }\n\n      var syncedComponentData = componentSchema.property ? componentData[componentSchema.property] : componentData;\n\n      // Use networkUpdatePredicate to check if the component needs to be updated.\n      // Call networkUpdatePredicate first so that it can update any cached values in the event of a fullSync.\n      if (this.networkUpdatePredicates[i](syncedComponentData) || fullSync) {\n        componentsData = componentsData || {};\n        componentsData[i] = syncedComponentData;\n      }\n    }\n\n    return componentsData;\n  },\n\n  createSyncData: function(components, isFirstSync) {\n    var { syncData, data } = this;\n    syncData.networkId = data.networkId;\n    syncData.owner = data.owner;\n    syncData.creator = data.creator;\n    syncData.lastOwnerTime = this.lastOwnerTime;\n    syncData.template = data.template;\n    syncData.persistent = data.persistent;\n    syncData.parent = this.getParentId();\n    syncData.components = components;\n    syncData.isFirstSync = !!isFirstSync;\n    return syncData;\n  },\n\n  canSync: function() {\n    // This client will send a sync if:\n    //\n    // - The client is the owner\n    // - The client is the creator, and the owner is not in the room.\n    //\n    // The reason for the latter case is so the object will still be\n    // properly instantiated if the owner leaves. (Since the object lifetime\n    // is tied to the creator.)\n    if (this.data.owner && this.isMine()) return true;\n    if (!this.createdByMe()) return false;\n\n    const clients = NAF.connection.getConnectedClients();\n\n    for (let clientId in clients) {\n      if (clientId === this.data.owner) return false;\n    }\n\n    return true;\n  },\n\n  getParentId: function() {\n    this.initNetworkParent(); // TODO fix calling this each network tick\n    if (!this.parent) {\n      return null;\n    }\n    var netComp = this.parent.getAttribute('networked');\n    return netComp.networkId;\n  },\n\n  /* Receiving updates */\n\n  networkUpdate: function(entityData) {\n    // Avoid updating components if the entity data received did not come from the current owner.\n    if (entityData.lastOwnerTime < this.lastOwnerTime ||\n          (this.lastOwnerTime === entityData.lastOwnerTime && this.data.owner > entityData.owner)) {\n      return;\n    }\n\n    // Hack to solve this bug: https://github.com/networked-aframe/networked-aframe/issues/200\n    if (this.data === undefined) {\n      return;\n    }\n\n    if (this.data.owner !== entityData.owner) {\n      var wasMine = this.isMine();\n      this.lastOwnerTime = entityData.lastOwnerTime;\n\n      const oldOwner = this.data.owner;\n      const newOwner = entityData.owner;\n\n      this.el.setAttribute('networked', { owner: entityData.owner });\n\n      if (wasMine) {\n        this.onOwnershipLostEvent.newOwner = newOwner;\n        this.el.emit(this.OWNERSHIP_LOST, this.onOwnershipLostEvent);\n      }\n      this.onOwnershipChangedEvent.oldOwner = oldOwner;\n      this.onOwnershipChangedEvent.newOwner = newOwner;\n      this.el.emit(this.OWNERSHIP_CHANGED, this.onOwnershipChangedEvent);\n    }\n    if (this.data.persistent !== entityData.persistent) {\n      this.el.setAttribute('networked', { persistent: entityData.persistent });\n    }\n    this.updateNetworkedComponents(entityData.components);\n  },\n\n  updateNetworkedComponents: function(components) {\n    for (var componentIndex = 0, l = this.componentSchemas.length; componentIndex < l; componentIndex++) {\n      var componentData = components[componentIndex];\n      var componentSchema = this.componentSchemas[componentIndex];\n      var componentElement = this.getCachedElement(componentIndex);\n\n      if (componentElement === null || componentData === null || componentData === undefined ) {\n        continue;\n      }\n\n      if (componentSchema.component) {\n        if (componentSchema.property) {\n          this.updateNetworkedComponent(componentElement, componentSchema.component, componentSchema.property, componentData);\n        } else {\n          this.updateNetworkedComponent(componentElement, componentSchema.component, componentData);\n        }\n      } else {\n        this.updateNetworkedComponent(componentElement, componentSchema, componentData);\n      }\n    }\n  },\n\n  updateNetworkedComponent: function (el, componentName, data, value) {\n    if(!NAF.options.useLerp || !OBJECT3D_COMPONENTS.includes(componentName)) {\n      if (value === undefined) {\n        el.setAttribute(componentName, data);\n      } else {\n        el.setAttribute(componentName, data, value);\n      }\n      return;\n    }\n\n    let bufferInfo;\n\n    for (let i = 0, l = this.bufferInfos.length; i < l; i++) {\n      const info = this.bufferInfos[i];\n\n      if (info.object3D === el.object3D) {\n        bufferInfo = info;\n        break;\n      }\n    }\n\n    if (!bufferInfo) {\n      bufferInfo = { buffer: new InterpolationBuffer(InterpolationBuffer.MODE_LERP, 0.1),\n                     object3D: el.object3D,\n                     componentNames: [componentName] };\n      this.bufferInfos.push(bufferInfo);\n    } else {\n      var componentNames = bufferInfo.componentNames;\n      if (!componentNames.includes(componentName)) {\n        componentNames.push(componentName);\n      }\n    }\n    var buffer = bufferInfo.buffer;\n\n    switch(componentName) {\n      case 'position':\n        buffer.setPosition(this.bufferPosition.set(data.x, data.y, data.z));\n        return;\n      case 'rotation':\n        this.conversionEuler.set(DEG2RAD * data.x, DEG2RAD * data.y, DEG2RAD * data.z);\n        buffer.setQuaternion(this.bufferQuaternion.setFromEuler(this.conversionEuler));\n        return;\n      case 'scale':\n        buffer.setScale(this.bufferScale.set(data.x, data.y, data.z));\n        return;\n    }\n    NAF.log.error('Could not set value in interpolation buffer.', el, componentName, data, bufferInfo);\n  },\n\n  removeLerp: function() {\n    this.bufferInfos = [];\n  },\n\n  remove: function () {\n    if (this.isMine() && NAF.connection.isConnected()) {\n      var syncData = { networkId: this.data.networkId };\n      if (NAF.entities.hasEntity(this.data.networkId)) {\n        NAF.connection.broadcastDataGuaranteed('r', syncData);\n      } else {\n        // The entity may already have been removed if the creator (different of the current owner) left the room.\n        // Don't log an error in this case.\n        if (!(this.data.creator && NAF.connection.activeDataChannels[this.data.creator] === false)) {\n          NAF.log.error(\"Removing networked entity that is not in entities array.\");\n        }\n      }\n    }\n    NAF.entities.forgetEntity(this.data.networkId);\n    document.body.dispatchEvent(this.entityRemovedEvent(this.data.networkId));\n    this.el.sceneEl.systems.networked.deregister(this);\n  },\n\n  entityCreatedEvent() {\n    return new CustomEvent('entityCreated', {detail: {el: this.el}});\n  },\n\n  entityRemovedEvent(networkId) {\n    return new CustomEvent('entityRemoved', {detail: {networkId: networkId}});\n  }\n});\n","// Global vars and functions\nrequire('./NafIndex.js');\n\n// Network components\nrequire('./components/networked-scene');\nrequire('./components/networked');\nrequire('./components/networked-audio-source');\nrequire('./components/networked-video-source');\n","var options = {\n  debug: false,\n  updateRate: 15, // How often network components call `sync`\n  useLerp: true, // lerp position, rotation, and scale components on networked entities.\n  firstSyncSource: null, // If specified, only allow first syncs from this source.\n  syncSource: null, // If specified, only allow syncs from this source.\n};\nmodule.exports = options;\n","/* global NAF */\n\nmodule.exports.whenEntityLoaded = function(entity, callback) {\n  if (entity.hasLoaded) { callback(); }\n  entity.addEventListener('loaded', function () {\n    callback();\n  });\n}\n\nmodule.exports.createHtmlNodeFromString = function(str) {\n  var div = document.createElement('div');\n  div.innerHTML = str;\n  var child = div.firstChild;\n  return child;\n}\n\nmodule.exports.getCreator = function(el) {\n  var components = el.components;\n  if (components['networked']) {\n    return components['networked'].data.creator;\n  }\n  return null;\n}\n\nmodule.exports.getNetworkOwner = function(el) {\n  var components = el.components;\n  if (components['networked']) {\n    return components['networked'].data.owner;\n  }\n  return null;\n}\n\nmodule.exports.getNetworkId = function(el) {\n  var components = el.components;\n  if (components['networked']) {\n    return components['networked'].data.networkId;\n  }\n  return null;\n}\n\nmodule.exports.now = function() {\n  return Date.now();\n};\n\nmodule.exports.createNetworkId = function() {\n  return Math.random().toString(36).substring(2, 9);\n};\n\n/**\n * Find the closest ancestor (including the passed in entity) that has a `networked` component\n * @param {ANode} entity - Entity to begin the search on\n * @returns {Promise<ANode>} An promise that resolves to an entity with a `networked` component\n */\nfunction getNetworkedEntity(entity) {\n  return new Promise((resolve, reject) => {\n    let curEntity = entity;\n\n    while(curEntity && curEntity.components && !curEntity.components.networked) {\n      curEntity = curEntity.parentNode;\n    }\n\n    if (!curEntity || !curEntity.components || !curEntity.components.networked) {\n      return reject(\"Entity does not have and is not a child of an entity with the [networked] component \");\n    }\n\n    if (curEntity.hasLoaded) {\n      resolve(curEntity);\n    } else {\n      curEntity.addEventListener(\"instantiated\", () => {\n        resolve(curEntity);\n      }, { once: true });\n    }\n  });\n}\n\nmodule.exports.getNetworkedEntity = getNetworkedEntity;\n\nmodule.exports.takeOwnership = function(entity) {\n  let curEntity = entity;\n\n  while(curEntity && curEntity.components && !curEntity.components.networked) {\n    curEntity = curEntity.parentNode;\n  }\n\n  if (!curEntity || !curEntity.components || !curEntity.components.networked) {\n    throw new Error(\"Entity does not have and is not a child of an entity with the [networked] component \");\n  }\n\n  return curEntity.components.networked.takeOwnership();\n};\n\nmodule.exports.isMine = function(entity) {\n  let curEntity = entity;\n\n  while(curEntity && curEntity.components && !curEntity.components.networked) {\n    curEntity = curEntity.parentNode;\n  }\n\n  if (!curEntity || !curEntity.components || !curEntity.components.networked) {\n    throw new Error(\"Entity does not have and is not a child of an entity with the [networked] component \");\n  }\n\n  // When remote networked entities are initially created, there's a frame delay before they are completely instantiated.\n  // On that frame, data is undefined so we can't check the owner. In this instance we assume that the user is not the owner of the entity.\n  if (!curEntity.components.networked.data) {\n    return false;\n  }\n\n  return curEntity.components.networked.data.owner === NAF.clientId;\n};\n\nmodule.exports.almostEqualVec3 = function(u, v, epsilon) {\n  return Math.abs(u.x-v.x)<epsilon && Math.abs(u.y-v.y)<epsilon && Math.abs(u.z-v.z)<epsilon;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","framePool","getPooledFrame","frame","pop","position","THREE","Vector3","velocity","scale","quaternion","Quaternion","time","InterpolationBuffer","mode","arguments","undefined","bufferTime","this","state","buffer","originFrame","value","t","p1","p2","v1","v2","t2","t3","a","b","c","d","copy","multiplyScalar","add","alpha","lerpVectors","r1","r2","slerpQuaternions","f","push","shift","tail","priorFrame","newFrame","appendBuffer","delta","updateOriginFrameToBufferTail","mark","targetFrame","delta_time","lerp","hermite","slerp","module","exports","constructor","dict","addChild","parentNetworkId","childData","hasParent","getChildren","children","parentId","isArray","Array","keyList","keys","hasProp","hasOwnProperty","equal","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","call","options","utils","NafLogger","Schemas","NetworkEntities","NetworkConnection","AdapterFactory","naf","log","schemas","version","adapters","entities","connection","window","NAF","notImplemented","name","error","debug","setDebug","write","console","apply","warn","networkEntities","setupDefaultDataSubscriptions","connectedClients","activeDataChannels","setNetworkAdapter","adapter","dataChannelSubs","updateEntity","bind","updateEntityMulti","removeRemoteEntity","connect","serverUrl","appName","roomName","enableAudio","enableVideo","app","room","setServerUrl","setApp","setRoom","webrtcOptions","audio","video","datachannel","setWebRtcOptions","setServerConnectListeners","connectSuccess","connectFailure","setDataChannelListeners","dataChannelOpen","dataChannelClosed","receivedData","setRoomOccupantListener","occupantsReceived","onConnect","callback","onConnectCallback","isConnected","document","body","addEventListener","clientId","evt","CustomEvent","dispatchEvent","errorCode","message","occupantList","prevConnectedClients","assign","checkForDisconnectingClients","checkForConnectingClients","oldOccupantList","newOccupantList","id","closeStreamConnection","isNewClient","shouldStartConnectionTo","startStreamConnection","getConnectedClients","isMineAndConnected","isConnectedTo","getConnectStatus","IS_CONNECTED","completeSync","detail","removeEntitiesOfClient","hasActiveDataChannel","broadcastData","dataType","data","broadcastDataGuaranteed","sendData","toClientId","guaranteed","sendDataGuaranteed","subscribeToDataChannel","isReservedDataType","unsubscribeToDataChannel","fromClientId","source","getServerTime","disconnect","removeRemoteEntities","removeEventListener","ChildEntityCache","childCache","onRemoteEntityCreatedEvent","Event","_persistentFirstSyncs","registerEntity","networkId","entity","createRemoteEntity","entityData","el","getCachedTemplate","template","initPosition","components","initRotation","addNetworkComponent","componentData","setAttribute","rotation","networkData","creator","owner","persistent","firstUpdateData","client","entityDatas","syncSource","l","hasEntity","networked","networkUpdate","isFirstSync","firstSyncSource","receiveFirstUpdateFromEntity","parent","remoteEntity","createAndAppendChildren","addEntityToPage","parentEntity","childEntityData","childId","getEntity","childEntity","appendChild","addEntityToParent","addEntityToSceneRoot","querySelector","targetClientId","syncAll","toClient","removeEntity","removedEntities","getCreator","getNetworkOwner","component","getAttribute","takeOwnership","forgetPersistentFirstSync","forgetEntity","parentNode","removeChild","getPersistentFirstSync","schemaDict","templateCache","createDefaultSchema","schema","validateSchema","templateEl","validateTemplate","importNode","content","templateIsCached","templateExistsInScene","firstElementChild","cloneNode","getComponents","hasTemplate","templateSelector","isTemplateTag","templateHasOneOrZeroChildren","tagName","toLowerCase","childElementCount","remove","clear","WsEasyRtcAdapter","EasyRtcAdapter","WebrtcAdapter","SocketioAdapter","CONNECTING","NOT_CONNECTED","register","adapterName","AdapterClass","make","Error","NoOpAdapter","easyrtc","super","mediaStreams","remoteClients","pendingMediaRequests","Map","serverTimeRequests","timeOffsets","avgTimeOffset","setPeerOpenListener","clientConnection","getPeerConnectionByUserId","setPeerClosedListener","get","msg","forEach","streamName","reject","delete","url","setSocketUrl","joinRoom","enableDataChannels","enableVideoReceive","enableAudioReceive","successListener","failureListener","occupantListener","occupants","primary","openListener","closedListener","messageListener","setDataChannelOpenListener","setDataChannelCloseListener","setPeerListener","updateTimeOffset","clientSentTime","now","fetch","location","href","method","cache","then","res","serverReceivedTime","headers","clientReceivedTime","timeOffset","reduce","acc","offset","setTimeout","Promise","all","resolve","_connect","_","_myRoomJoinTime","_getRoomJoinTime","catch","roomJoinTime","caller","media","errorText","wasAccepted","hangup","sendDataWS","roomOccupants","getRoomOccupantsAsMap","roomOccupant","myEasyrtcid","destination","targetRoom","status","getMediaStream","has","audioPromise","e","promise","videoPromise","set","streamPromise","setMediaStream","stream","clientMediaStreams","audioTracks","getAudioTracks","audioStream","MediaStream","track","addTrack","videoTracks","getVideoTracks","videoStream","addLocalMediaStream","register3rdPartyLocalMediaStream","addStreamToCall","removeLocalMediaStream","closeLocalMediaStream","enableMicrophone","enabled","enableCamera","that","setStreamAcceptor","setOnStreamClosed","audioEnabled","videoEnabled","navigator","mediaDevices","getUserMedia","errmesg","myRoomId","NafInterface","index","indexOf","splice","io","myRoomJoinTime","myId","wsUrl","self","protocol","host","socket","receiveData","packet","from","type","on","joinedTime","err","receivedOccupants","emit","remoteId","filter","to","sending","broadcasting","WebRtcPeer","localId","sendSignalFunc","open","channelLabel","pc","createPeerConnection","channel","setDatachannelListeners","trackListener","offer","setupChannel","createDataChannel","reliable","sendAudio","localAudioStream","getTracks","createOffer","sdp","handleSessionDescription","offerToReceiveAudio","offerToReceiveVideo","handleSignal","signal","handleOffer","handleAnswer","handleCandidate","send","readyState","JSON","stringify","getStatus","RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","msRTCPeerConnection","iceServers","ICE_SERVERS","onicecandidate","event","candidate","sdpMLineIndex","oniceconnectionstatechange","iceConnectionState","ontrack","streams","onmessage","parse","onopen","_event","onclose","onerror","ondatachannel","setRemoteDescription","createAnswer","RTCIceCandidate","webkitRTCIceCandidate","mozRTCIceCandidate","addIceCandidate","setLocalDescription","RTCSessionDescription","webkitRTCSessionDescription","mozRTCSessionDescription","msRTCSessionDescription","close","urls","peers","audioStreams","pendingAudioRequest","mediaConstraints","localStream","storeAudioStream","peerId","peer","AFRAME","registerComponent","default","positional","distanceModel","oneOf","maxDistance","refDistance","rolloffFactor","init","listener","_setMediaStream","getNetworkedEntity","networkedEl","ownerId","update","_setPannerProperties","newStream","sound","setupSound","test","userAgent","audioEl","Audio","srcObject","volume","soundSource","context","createMediaStreamSource","setNodeSource","setDistanceModel","setMaxDistance","setRefDistance","setRolloffFactor","removeObject3D","attrName","pause","load","sceneEl","audioListener","AudioListener","camera","cameraEl","getObject3D","PositionalAudio","setObject3D","serverURL","connectOnLoad","checkDeprecatedProperties","setupNetworkAdapter","hasOnConnectFunction","callOnConnect","dependencies","videoTexture","setupVideo","_clearMediaStream","playResult","play","dispose","VideoTexture","mesh","material","map","needsUpdate","image","HTMLVideoElement","createElement","deepEqual","DEG2RAD","Math","OBJECT3D_COMPONENTS","isValidVector3","v","isVector3","isNaN","x","y","z","previousLogTime","throttle","milliseconds","warnOnInvalidNetworkUpdate","registerSystem","nextSyncTime","deregister","idx","tick","clock","elapsedTime","isMine","parentElement","syncData","syncDirty","updateNextSyncTime","updateRate","attachTemplateToLocal","OWNERSHIP_GAINED","OWNERSHIP_CHANGED","OWNERSHIP_LOST","onOwnershipGainedEvent","onOwnershipChangedEvent","onOwnershipLostEvent","conversionEuler","Euler","order","bufferInfos","bufferPosition","bufferQuaternion","bufferScale","wasCreatedByNetwork","onConnected","componentSchemas","cachedElements","networkUpdatePredicates","requiresNetworkUpdate","cachedData","newData","clone","defaultRequiresUpdate","invalidateCachedElements","initNetworkParent","createNetworkId","firstUpdate","lastOwnerTime","entityCreatedEvent","systems","elAttrs","attributes","attrIdx","removeLerp","oldOwner","newOwner","parentEl","applyPersistentFirstSync","persistentFirstSync","createdByMe","dt","useLerp","bufferInfo","object3D","componentNames","includes","getPosition","getQuaternion","q","isQuaternion","w","getScale","canSync","gatherComponentsData","createSyncData","getCachedElement","componentSchemaIndex","cachedElement","componentSchema","selector","fullSync","componentsData","componentElement","componentName","syncedComponentData","property","getParentId","clients","wasMine","updateNetworkedComponents","componentIndex","updateNetworkedComponent","info","MODE_LERP","setPosition","setQuaternion","setFromEuler","setScale","entityRemovedEvent","whenEntityLoaded","hasLoaded","createHtmlNodeFromString","str","div","innerHTML","firstChild","getNetworkId","random","substring","curEntity","once","almostEqualVec3","u","epsilon","abs","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","definition","o","obj","prop"],"sourceRoot":""}